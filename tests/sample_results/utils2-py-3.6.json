[
    [
        "LOAD_NAME",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys.version"
    ],
    [
        "LOAD_ATTR",
        "sys.version.lower"
    ],
    [
        "CALL_FUNCTION",
        "sys.version.lower()"
    ],
    [
        "COMPARE_OP",
        "'pypy' in sys.version.lower()"
    ],
    [
        "LOAD_NAME",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys.version_info"
    ],
    [
        "BINARY_SUBSCR",
        "sys.version_info[:2]"
    ],
    [
        "COMPARE_OP",
        "sys.version_info[:2] in [(3, 4), (3, 8)]"
    ],
    [
        "LOAD_NAME",
        "IOError"
    ],
    [
        "LOAD_NAME",
        "OSError"
    ],
    [
        "LOAD_NAME",
        "ValueError"
    ],
    [
        "LOAD_NAME",
        "dict"
    ],
    [
        "LOAD_NAME",
        "inspect"
    ],
    [
        "LOAD_ATTR",
        "inspect.iscoroutinefunction"
    ],
    [
        "LOAD_NAME",
        "AttributeError"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Try"
    ],
    [
        "LOAD_NAME",
        "AttributeError"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.TryExcept"
    ],
    [
        "LOAD_NAME",
        "__import__"
    ],
    [
        "CALL_FUNCTION",
        "__import__(\"__builtin__\")"
    ],
    [
        "LOAD_NAME",
        "ImportError"
    ],
    [
        "LOAD_NAME",
        "__import__"
    ],
    [
        "CALL_FUNCTION",
        "__import__(\"builtins\")"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.FormattedValue"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "ImportError"
    ],
    [
        "LOAD_NAME",
        "str"
    ],
    [
        "LOAD_NAME",
        "ImportError"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "try_register_repr"
    ],
    [
        "CALL_FUNCTION",
        "try_register_repr('pandas', 'Series')"
    ],
    [
        "CALL_FUNCTION",
        "try_register_repr('pandas', 'Series')"
    ],
    [
        "LOAD_ATTR",
        "''.join"
    ],
    [
        "LOAD_FAST",
        "s"
    ],
    [
        "CALL_FUNCTION",
        "''.join(\n        (c if (0 < ord(c) < 256) else '?') for c in s\n    )"
    ],
    [
        "LOAD_GLOBAL",
        "ord"
    ],
    [
        "LOAD_FAST",
        "c"
    ],
    [
        "CALL_FUNCTION",
        "ord(c)"
    ],
    [
        "LOAD_FAST",
        "c"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "seq"
    ],
    [
        "CALL_FUNCTION",
        "len(seq)"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "COMPARE_OP",
        "len(seq) > max_length"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "middle"
    ],
    [
        "CALL_FUNCTION",
        "len(middle)"
    ],
    [
        "BINARY_SUBTRACT",
        "max_length - len(middle)"
    ],
    [
        "BINARY_FLOOR_DIVIDE",
        "(max_length - len(middle)) // 2"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "middle"
    ],
    [
        "CALL_FUNCTION",
        "len(middle)"
    ],
    [
        "BINARY_SUBTRACT",
        "max_length - len(middle)"
    ],
    [
        "LOAD_FAST",
        "left"
    ],
    [
        "BINARY_SUBTRACT",
        "max_length - len(middle) - left"
    ],
    [
        "LOAD_FAST",
        "seq"
    ],
    [
        "LOAD_FAST",
        "left"
    ],
    [
        "BINARY_SUBSCR",
        "seq[:left]"
    ],
    [
        "LOAD_FAST",
        "middle"
    ],
    [
        "BINARY_ADD",
        "seq[:left] + middle"
    ],
    [
        "LOAD_FAST",
        "seq"
    ],
    [
        "LOAD_FAST",
        "right"
    ],
    [
        "UNARY_NEGATIVE",
        "-right"
    ],
    [
        "BINARY_SUBSCR",
        "seq[-right:]"
    ],
    [
        "BINARY_ADD",
        "seq[:left] + middle + seq[-right:]"
    ],
    [
        "LOAD_FAST",
        "seq"
    ],
    [
        "LOAD_GLOBAL",
        "truncate"
    ],
    [
        "LOAD_FAST",
        "string"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "CALL_FUNCTION",
        "truncate(string, max_length, '...')"
    ],
    [
        "LOAD_GLOBAL",
        "truncate"
    ],
    [
        "LOAD_FAST",
        "lst"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "CALL_FUNCTION",
        "truncate(lst, max_length, ['...'])"
    ],
    [
        "LOAD_FAST",
        "split"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_GLOBAL",
        "six"
    ],
    [
        "LOAD_ATTR",
        "six.string_types"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(x, six.string_types)"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_ATTR",
        "x.replace"
    ],
    [
        "CALL_FUNCTION",
        "x.replace(',', ' ')"
    ],
    [
        "LOAD_ATTR",
        "x.replace(',', ' ').split"
    ],
    [
        "CALL_FUNCTION",
        "x.replace(',', ' ').split()"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "LOAD_GLOBAL",
        "set"
    ],
    [
        "LOAD_GLOBAL",
        "tuple"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(x, (list, set, tuple))"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_GLOBAL",
        "tuple"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "CALL_FUNCTION",
        "tuple(x)"
    ],
    [
        "LOAD_GLOBAL",
        "os"
    ],
    [
        "LOAD_ATTR",
        "os.path"
    ],
    [
        "LOAD_ATTR",
        "os.path.basename"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_filename"
    ],
    [
        "CALL_FUNCTION",
        "os.path.basename(code.co_filename)"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_ATTR",
        "result.endswith"
    ],
    [
        "CALL_FUNCTION",
        "result.endswith('.pyc')"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "BINARY_SUBSCR",
        "result[:-1]"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_name"
    ],
    [
        "COMPARE_OP",
        "frame.f_code.co_name in ('<listcomp>', '<dictcomp>', '<setcomp>')"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "CALL_FUNCTION",
        "code('{}.x')"
    ],
    [
        "LOAD_GLOBAL",
        "SyntaxError"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "CALL_FUNCTION",
        "code('({})')"
    ],
    [
        "LOAD_FAST",
        "without_parens"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "CALL_FUNCTION",
        "code('({}).x')"
    ],
    [
        "COMPARE_OP",
        "without_parens != code('({}).x')"
    ],
    [
        "LOAD_GLOBAL",
        "compile"
    ],
    [
        "LOAD_FAST",
        "s"
    ],
    [
        "LOAD_ATTR",
        "s.format"
    ],
    [
        "LOAD_DEREF",
        "source"
    ],
    [
        "CALL_FUNCTION",
        "s.format(source)"
    ],
    [
        "CALL_FUNCTION",
        "compile(s.format(source), '<variable>', 'eval')"
    ],
    [
        "LOAD_ATTR",
        "compile(s.format(source), '<variable>', 'eval').co_code"
    ],
    [
        "LOAD_GLOBAL",
        "needs_parentheses"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "CALL_FUNCTION",
        "needs_parentheses(source)"
    ],
    [
        "LOAD_ATTR",
        "'({})'.format"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "CALL_FUNCTION",
        "'({})'.format(source)"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_GLOBAL",
        "cheap_repr"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_GLOBAL",
        "REPR_TARGET_LENGTH"
    ],
    [
        "CALL_FUNCTION_KW",
        "cheap_repr(x, target_length=REPR_TARGET_LENGTH)"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "ArgDefaultDict"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "CALL_FUNCTION",
        "super(ArgDefaultDict, self)"
    ],
    [
        "LOAD_ATTR",
        "super(ArgDefaultDict, self).__init__"
    ],
    [
        "CALL_FUNCTION",
        "super(ArgDefaultDict, self).__init__()"
    ],
    [
        "LOAD_FAST",
        "factory"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.factory"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.factory"
    ],
    [
        "LOAD_FAST",
        "key"
    ],
    [
        "CALL_FUNCTION",
        "self.factory(key)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_FAST",
        "key"
    ],
    [
        "STORE_SUBSCR",
        "self[key]"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "lst"
    ],
    [
        "CALL_FUNCTION",
        "len(lst)"
    ],
    [
        "COMPARE_OP",
        "len(lst) == 1"
    ],
    [
        "LOAD_GLOBAL",
        "str"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_ADD",
        "i + 1"
    ],
    [
        "CALL_FUNCTION",
        "str(i + 1)"
    ],
    [
        "BINARY_ADD",
        "' ' + str(i + 1)"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_GLOBAL",
        "os"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(os, 'PathLike')"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_GLOBAL",
        "os"
    ],
    [
        "LOAD_ATTR",
        "os.PathLike"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(x, os.PathLike)"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(x, '__fspath__')"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(x, 'open')"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_ATTR",
        "x.__class__"
    ],
    [
        "LOAD_ATTR",
        "x.__class__.__name__"
    ],
    [
        "LOAD_ATTR",
        "x.__class__.__name__.lower"
    ],
    [
        "CALL_FUNCTION",
        "x.__class__.__name__.lower()"
    ],
    [
        "COMPARE_OP",
        "'path' in x.__class__.__name__.lower()"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "CALL_FUNCTION",
        "len(args)"
    ],
    [
        "COMPARE_OP",
        "len(args) == 1"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_ATTR",
        "inspect.isfunction"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "BINARY_SUBSCR",
        "args[0]"
    ],
    [
        "CALL_FUNCTION",
        "inspect.isfunction(args[0])"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "UNARY_NOT",
        "not kwargs"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_FAST",
        "length"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "BINARY_ADD",
        "max_length + 2"
    ],
    [
        "COMPARE_OP",
        "length <= max_length + 2"
    ],
    [
        "LOAD_GLOBAL",
        "range"
    ],
    [
        "LOAD_FAST",
        "length"
    ],
    [
        "CALL_FUNCTION",
        "range(length)"
    ],
    [
        "LOAD_GLOBAL",
        "chain"
    ],
    [
        "LOAD_GLOBAL",
        "range"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "BINARY_FLOOR_DIVIDE",
        "max_length // 2"
    ],
    [
        "CALL_FUNCTION",
        "range(max_length // 2)"
    ],
    [
        "LOAD_GLOBAL",
        "range"
    ],
    [
        "LOAD_FAST",
        "length"
    ],
    [
        "LOAD_FAST",
        "max_length"
    ],
    [
        "BINARY_FLOOR_DIVIDE",
        "max_length // 2"
    ],
    [
        "BINARY_SUBTRACT",
        "length - max_length // 2"
    ],
    [
        "LOAD_FAST",
        "length"
    ],
    [
        "CALL_FUNCTION",
        "range(length - max_length // 2,\n                           length)"
    ],
    [
        "CALL_FUNCTION",
        "chain(range(max_length // 2),\n                     range(length - max_length // 2,\n                           length))"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "CALL_FUNCTION",
        "len(x)"
    ],
    [
        "LOAD_FAST",
        "n"
    ],
    [
        "COMPARE_OP",
        "n == 0"
    ],
    [
        "LOAD_GLOBAL",
        "repr"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "CALL_FUNCTION",
        "repr(x)"
    ],
    [
        "LOAD_FAST",
        "helper"
    ],
    [
        "LOAD_ATTR",
        "helper.level"
    ],
    [
        "BINARY_SUBTRACT",
        "helper.level - 1"
    ],
    [
        "LOAD_GLOBAL",
        "_repr_series_one_line"
    ],
    [
        "LOAD_ATTR",
        "_repr_series_one_line.maxparts"
    ],
    [
        "LOAD_GLOBAL",
        "_sample_indices"
    ],
    [
        "LOAD_FAST",
        "n"
    ],
    [
        "LOAD_FAST",
        "maxparts"
    ],
    [
        "CALL_FUNCTION",
        "_sample_indices(n, maxparts)"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_ATTR",
        "x.index"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_ADD",
        "i + 1"
    ],
    [
        "BINARY_SUBSCR",
        "x.index[i:i + 1]"
    ],
    [
        "LOAD_ATTR",
        "x.index[i:i + 1].format"
    ],
    [
        "CALL_FUNCTION_KW",
        "x.index[i:i + 1].format(sparsify=False)"
    ],
    [
        "BINARY_SUBSCR",
        "x.index[i:i + 1].format(sparsify=False)[0]"
    ],
    [
        "LOAD_FAST",
        "x"
    ],
    [
        "LOAD_ATTR",
        "x.iloc"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_SUBSCR",
        "x.iloc[i]"
    ],
    [
        "LOAD_FAST",
        "pieces"
    ],
    [
        "LOAD_ATTR",
        "pieces.append"
    ],
    [
        "LOAD_FAST",
        "k"
    ],
    [
        "LOAD_GLOBAL",
        "cheap_repr"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "LOAD_FAST",
        "newlevel"
    ],
    [
        "CALL_FUNCTION",
        "cheap_repr(v, newlevel)"
    ],
    [
        "BINARY_MODULO",
        "'%s = %s' % (k, cheap_repr(v, newlevel))"
    ],
    [
        "CALL_FUNCTION",
        "pieces.append('%s = %s' % (k, cheap_repr(v, newlevel)))"
    ],
    [
        "LOAD_FAST",
        "n"
    ],
    [
        "LOAD_FAST",
        "maxparts"
    ],
    [
        "BINARY_ADD",
        "maxparts + 2"
    ],
    [
        "COMPARE_OP",
        "n > maxparts + 2"
    ],
    [
        "LOAD_FAST",
        "pieces"
    ],
    [
        "LOAD_ATTR",
        "pieces.insert"
    ],
    [
        "LOAD_FAST",
        "maxparts"
    ],
    [
        "BINARY_FLOOR_DIVIDE",
        "maxparts // 2"
    ],
    [
        "CALL_FUNCTION",
        "pieces.insert(maxparts // 2, '...')"
    ],
    [
        "LOAD_ATTR",
        "'; '.join"
    ],
    [
        "LOAD_FAST",
        "pieces"
    ],
    [
        "CALL_FUNCTION",
        "'; '.join(pieces)"
    ]
]