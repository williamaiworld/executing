[
    [
        "LOAD_NAME",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys.version_info"
    ],
    [
        "BINARY_SUBSCR",
        "sys.version_info[0]"
    ],
    [
        "COMPARE_OP",
        "sys.version_info[0] == 3"
    ],
    [
        "LOAD_NAME",
        "PY3"
    ],
    [
        "LOAD_NAME",
        "lru_cache"
    ],
    [
        "CALL_FUNCTION_KW",
        "lru_cache(maxsize=None)"
    ],
    [
        "LOAD_NAME",
        "str"
    ],
    [
        "LOAD_NAME",
        "unicode"
    ],
    [
        "LOAD_NAME",
        "dis"
    ],
    [
        "LOAD_ATTR",
        "dis.get_instructions"
    ],
    [
        "LOAD_NAME",
        "AttributeError"
    ],
    [
        "LOAD_NAME",
        "namedtuple"
    ],
    [
        "CALL_FUNCTION",
        "namedtuple('Instruction', 'offset argval opname')"
    ],
    [
        "LOAD_NAME",
        "Exception"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.NodeVisitor"
    ],
    [
        "LOAD_NAME",
        "sum"
    ],
    [
        "LOAD_NAME",
        "__future__"
    ],
    [
        "LOAD_ATTR",
        "__future__.all_feature_names"
    ],
    [
        "CALL_FUNCTION",
        "sum(\n    getattr(__future__, fname).compiler_flag\n    for fname in __future__.all_feature_names\n)"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "RLock"
    ],
    [
        "CALL_FUNCTION",
        "RLock()"
    ],
    [
        "LOAD_NAME",
        "cache"
    ],
    [
        "CALL_FUNCTION",
        "cache"
    ],
    [
        "LOAD_GLOBAL",
        "functools"
    ],
    [
        "LOAD_METHOD",
        "functools.wraps"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_METHOD",
        "functools.wraps(func)"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(func)"
    ],
    [
        "LOAD_FAST",
        "wrapper"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_DEREF",
        "d"
    ],
    [
        "COMPARE_OP",
        "args in d"
    ],
    [
        "LOAD_DEREF",
        "d"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "BINARY_SUBSCR",
        "d[args]"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "CALL_FUNCTION_EX",
        "func(*args)"
    ],
    [
        "LOAD_DEREF",
        "d"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "STORE_SUBSCR",
        "d[args]"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_FAST",
        "co"
    ],
    [
        "LOAD_ATTR",
        "co.co_code"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "CALL_FUNCTION",
        "len(code)"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "LOAD_FAST",
        "n"
    ],
    [
        "COMPARE_OP",
        "i < n"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_SUBSCR",
        "code[i]"
    ],
    [
        "LOAD_GLOBAL",
        "ord"
    ],
    [
        "LOAD_FAST",
        "c"
    ],
    [
        "CALL_FUNCTION",
        "ord(c)"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_ADD",
        "i + 1"
    ],
    [
        "LOAD_FAST",
        "op"
    ],
    [
        "LOAD_GLOBAL",
        "HAVE_ARGUMENT"
    ],
    [
        "COMPARE_OP",
        "op >= HAVE_ARGUMENT"
    ],
    [
        "LOAD_GLOBAL",
        "ord"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_SUBSCR",
        "code[i]"
    ],
    [
        "CALL_FUNCTION",
        "ord(code[i])"
    ],
    [
        "LOAD_GLOBAL",
        "ord"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_ADD",
        "i + 1"
    ],
    [
        "BINARY_SUBSCR",
        "code[i + 1]"
    ],
    [
        "CALL_FUNCTION",
        "ord(code[i + 1])"
    ],
    [
        "BINARY_MULTIPLY",
        "ord(code[i + 1]) * 256"
    ],
    [
        "BINARY_ADD",
        "ord(code[i]) + ord(code[i + 1]) * 256"
    ],
    [
        "LOAD_FAST",
        "extended_arg"
    ],
    [
        "BINARY_ADD",
        "ord(code[i]) + ord(code[i + 1]) * 256 + extended_arg"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_ADD",
        "i + 2"
    ],
    [
        "LOAD_FAST",
        "op"
    ],
    [
        "LOAD_GLOBAL",
        "EXTENDED_ARG"
    ],
    [
        "COMPARE_OP",
        "op == EXTENDED_ARG"
    ],
    [
        "LOAD_FAST",
        "oparg"
    ],
    [
        "BINARY_MULTIPLY",
        "oparg * 65536"
    ],
    [
        "LOAD_FAST",
        "op"
    ],
    [
        "LOAD_GLOBAL",
        "hasconst"
    ],
    [
        "COMPARE_OP",
        "op in hasconst"
    ],
    [
        "LOAD_FAST",
        "co"
    ],
    [
        "LOAD_ATTR",
        "co.co_consts"
    ],
    [
        "LOAD_FAST",
        "oparg"
    ],
    [
        "BINARY_SUBSCR",
        "co.co_consts[oparg]"
    ],
    [
        "LOAD_GLOBAL",
        "Instruction"
    ],
    [
        "LOAD_FAST",
        "offset"
    ],
    [
        "LOAD_FAST",
        "argval"
    ],
    [
        "LOAD_GLOBAL",
        "opname"
    ],
    [
        "LOAD_FAST",
        "op"
    ],
    [
        "BINARY_SUBSCR",
        "opname[op]"
    ],
    [
        "CALL_FUNCTION",
        "Instruction(offset, argval, opname[op])"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "it"
    ],
    [
        "LOAD_GLOBAL",
        "Sized"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(it, Sized)"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "it"
    ],
    [
        "CALL_FUNCTION",
        "len(it)"
    ],
    [
        "COMPARE_OP",
        "len(it) != 1"
    ],
    [
        "LOAD_GLOBAL",
        "NotOneValueFound"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "it"
    ],
    [
        "CALL_FUNCTION",
        "len(it)"
    ],
    [
        "BINARY_MODULO",
        "'Expected one value, found %s' % len(it)"
    ],
    [
        "CALL_FUNCTION",
        "NotOneValueFound('Expected one value, found %s' % len(it))"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "LOAD_FAST",
        "it"
    ],
    [
        "CALL_FUNCTION",
        "list(it)"
    ],
    [
        "BINARY_SUBSCR",
        "list(it)[0]"
    ],
    [
        "LOAD_GLOBAL",
        "tuple"
    ],
    [
        "LOAD_GLOBAL",
        "islice"
    ],
    [
        "LOAD_FAST",
        "it"
    ],
    [
        "CALL_FUNCTION",
        "islice(it, 2)"
    ],
    [
        "CALL_FUNCTION",
        "tuple(islice(it, 2))"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "lst"
    ],
    [
        "CALL_FUNCTION",
        "len(lst)"
    ],
    [
        "COMPARE_OP",
        "len(lst) == 0"
    ],
    [
        "LOAD_GLOBAL",
        "NotOneValueFound"
    ],
    [
        "CALL_FUNCTION",
        "NotOneValueFound('Expected one value, found 0')"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "lst"
    ],
    [
        "CALL_FUNCTION",
        "len(lst)"
    ],
    [
        "COMPARE_OP",
        "len(lst) > 1"
    ],
    [
        "LOAD_GLOBAL",
        "NotOneValueFound"
    ],
    [
        "CALL_FUNCTION",
        "NotOneValueFound('Expected one value, found several')"
    ],
    [
        "LOAD_FAST",
        "lst"
    ],
    [
        "BINARY_SUBSCR",
        "lst[0]"
    ],
    [
        "LOAD_NAME",
        "classmethod"
    ],
    [
        "CALL_FUNCTION",
        "classmethod"
    ],
    [
        "LOAD_NAME",
        "classmethod"
    ],
    [
        "CALL_FUNCTION",
        "classmethod"
    ],
    [
        "LOAD_NAME",
        "classmethod"
    ],
    [
        "CALL_FUNCTION",
        "classmethod"
    ],
    [
        "LOAD_NAME",
        "classmethod"
    ],
    [
        "CALL_FUNCTION",
        "classmethod"
    ],
    [
        "LOAD_NAME",
        "classmethod"
    ],
    [
        "CALL_FUNCTION",
        "classmethod"
    ],
    [
        "LOAD_NAME",
        "cache"
    ],
    [
        "CALL_FUNCTION",
        "cache"
    ],
    [
        "LOAD_NAME",
        "cache"
    ],
    [
        "CALL_FUNCTION",
        "cache"
    ],
    [
        "LOAD_NAME",
        "staticmethod"
    ],
    [
        "CALL_FUNCTION",
        "staticmethod"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.filename"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "text"
    ],
    [
        "LOAD_GLOBAL",
        "text_type"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(text, text_type)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.decode_source"
    ],
    [
        "LOAD_FAST",
        "text"
    ],
    [
        "CALL_METHOD",
        "self.decode_source(text)"
    ],
    [
        "LOAD_FAST",
        "text"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.text"
    ],
    [
        "LOAD_GLOBAL",
        "PY3"
    ],
    [
        "LOAD_FAST",
        "text"
    ],
    [
        "LOAD_METHOD",
        "''.join"
    ],
    [
        "LOAD_GLOBAL",
        "enumerate"
    ],
    [
        "LOAD_FAST",
        "text"
    ],
    [
        "LOAD_METHOD",
        "text.splitlines"
    ],
    [
        "CALL_METHOD",
        "text.splitlines(True)"
    ],
    [
        "CALL_FUNCTION",
        "enumerate(text.splitlines(True))"
    ],
    [
        "CALL_METHOD",
        "''.join([\n                '\\n' if i < 2 and encoding_pattern.match(line)\n                else line\n                for i, line in enumerate(text.splitlines(True))\n            ])"
    ],
    [
        "LOAD_GLOBAL",
        "defaultdict"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "CALL_FUNCTION",
        "defaultdict(list)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self._nodes_by_line"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.tree"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self._qualnames"
    ],
    [
        "LOAD_FAST",
        "text"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.parse"
    ],
    [
        "LOAD_FAST",
        "ast_text"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.parse(ast_text, filename=filename)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.tree"
    ],
    [
        "LOAD_GLOBAL",
        "SyntaxError"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.walk"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tree"
    ],
    [
        "CALL_METHOD",
        "ast.walk(self.tree)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.iter_child_nodes"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "ast.iter_child_nodes(node)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "STORE_ATTR",
        "child.parent"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(node, 'lineno')"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._nodes_by_line"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.lineno"
    ],
    [
        "BINARY_SUBSCR",
        "self._nodes_by_line[node.lineno]"
    ],
    [
        "LOAD_METHOD",
        "self._nodes_by_line[node.lineno].append"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self._nodes_by_line[node.lineno].append(node)"
    ],
    [
        "LOAD_GLOBAL",
        "QualnameVisitor"
    ],
    [
        "CALL_FUNCTION",
        "QualnameVisitor()"
    ],
    [
        "LOAD_FAST",
        "visitor"
    ],
    [
        "LOAD_METHOD",
        "visitor.visit"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tree"
    ],
    [
        "CALL_METHOD",
        "visitor.visit(self.tree)"
    ],
    [
        "LOAD_FAST",
        "visitor"
    ],
    [
        "LOAD_ATTR",
        "visitor.qualnames"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self._qualnames"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "COMPARE_OP",
        "i < 2"
    ],
    [
        "LOAD_GLOBAL",
        "encoding_pattern"
    ],
    [
        "LOAD_METHOD",
        "encoding_pattern.match"
    ],
    [
        "LOAD_FAST",
        "line"
    ],
    [
        "CALL_METHOD",
        "encoding_pattern.match(line)"
    ],
    [
        "LOAD_FAST",
        "line"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_METHOD",
        "cls.for_filename"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_filename"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_globals"
    ],
    [
        "CALL_METHOD",
        "cls.for_filename(frame.f_code.co_filename, frame.f_globals or {})"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_METHOD",
        "cls._class_local"
    ],
    [
        "CALL_METHOD",
        "cls._class_local('__source_cache', {})"
    ],
    [
        "LOAD_FAST",
        "source_cache"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "BINARY_SUBSCR",
        "source_cache[filename]"
    ],
    [
        "LOAD_GLOBAL",
        "KeyError"
    ],
    [
        "LOAD_GLOBAL",
        "linecache"
    ],
    [
        "LOAD_METHOD",
        "linecache.getlines"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_FAST",
        "module_globals"
    ],
    [
        "CALL_METHOD",
        "linecache.getlines(filename, module_globals)"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_METHOD",
        "''.join"
    ],
    [
        "LOAD_FAST",
        "lines"
    ],
    [
        "CALL_METHOD",
        "''.join(lines)"
    ],
    [
        "CALL_FUNCTION",
        "cls(filename, ''.join(lines))"
    ],
    [
        "LOAD_FAST",
        "source_cache"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "STORE_SUBSCR",
        "source_cache[filename]"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_GLOBAL",
        "linecache"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(linecache, 'lazycache')"
    ],
    [
        "LOAD_GLOBAL",
        "linecache"
    ],
    [
        "LOAD_METHOD",
        "linecache.lazycache"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_filename"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_globals"
    ],
    [
        "CALL_METHOD",
        "linecache.lazycache(frame.f_code.co_filename, frame.f_globals)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_lasti"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_METHOD",
        "cls._class_local"
    ],
    [
        "CALL_METHOD",
        "cls._class_local('__executing_cache', {})"
    ],
    [
        "LOAD_FAST",
        "executing_cache"
    ],
    [
        "LOAD_FAST",
        "key"
    ],
    [
        "BINARY_SUBSCR",
        "executing_cache[key]"
    ],
    [
        "LOAD_GLOBAL",
        "KeyError"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_METHOD",
        "cls.for_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "cls.for_frame(frame)"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_ATTR",
        "source.tree"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_METHOD",
        "source.statements_at_line"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_lineno"
    ],
    [
        "CALL_METHOD",
        "source.statements_at_line(frame.f_lineno)"
    ],
    [
        "LOAD_GLOBAL",
        "NodeFinder"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "stmts"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_ATTR",
        "source.tree"
    ],
    [
        "CALL_FUNCTION",
        "NodeFinder(frame, stmts, source.tree)"
    ],
    [
        "LOAD_ATTR",
        "NodeFinder(frame, stmts, source.tree).result"
    ],
    [
        "LOAD_GLOBAL",
        "Exception"
    ],
    [
        "LOAD_GLOBAL",
        "statement_containing_node"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "statement_containing_node(node)"
    ],
    [
        "LOAD_FAST",
        "new_stmts"
    ],
    [
        "LOAD_FAST",
        "stmts"
    ],
    [
        "COMPARE_OP",
        "new_stmts <= stmts"
    ],
    [
        "LOAD_FAST",
        "new_stmts"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "stmts"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "executing_cache"
    ],
    [
        "LOAD_FAST",
        "key"
    ],
    [
        "STORE_SUBSCR",
        "executing_cache[key]"
    ],
    [
        "LOAD_GLOBAL",
        "Executing"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "CALL_FUNCTION_EX",
        "Executing(frame, *args)"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_ATTR",
        "cls.__dict__"
    ],
    [
        "LOAD_METHOD",
        "cls.__dict__.get"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_FAST",
        "default"
    ],
    [
        "CALL_METHOD",
        "cls.__dict__.get(name, default)"
    ],
    [
        "LOAD_GLOBAL",
        "setattr"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "CALL_FUNCTION",
        "setattr(cls, name, result)"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._nodes_by_line"
    ],
    [
        "LOAD_FAST",
        "lineno"
    ],
    [
        "BINARY_SUBSCR",
        "self._nodes_by_line[lineno]"
    ],
    [
        "LOAD_GLOBAL",
        "statement_containing_node"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "statement_containing_node(node)"
    ],
    [
        "LOAD_FAST",
        "ASTTokens"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.text"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tree"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.filename"
    ],
    [
        "CALL_FUNCTION_KW",
        "ASTTokens(\n            self.text,\n            tree=self.tree,\n            filename=self.filename,\n        )"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_GLOBAL",
        "bytes"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(source, bytes)"
    ],
    [
        "LOAD_GLOBAL",
        "detect_encoding"
    ],
    [
        "LOAD_GLOBAL",
        "io"
    ],
    [
        "LOAD_METHOD",
        "io.BytesIO"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "CALL_METHOD",
        "io.BytesIO(source)"
    ],
    [
        "LOAD_ATTR",
        "io.BytesIO(source).readline"
    ],
    [
        "CALL_FUNCTION",
        "detect_encoding(io.BytesIO(source).readline)"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_METHOD",
        "source.decode"
    ],
    [
        "LOAD_FAST",
        "encoding"
    ],
    [
        "CALL_METHOD",
        "source.decode(encoding)"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_filename"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.filename"
    ],
    [
        "COMPARE_OP",
        "code.co_filename == self.filename"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._qualnames"
    ],
    [
        "LOAD_METHOD",
        "self._qualnames.get"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_name"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_firstlineno"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_name"
    ],
    [
        "CALL_METHOD",
        "self._qualnames.get((code.co_name, code.co_firstlineno), code.co_name)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.frame"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.source"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.node"
    ],
    [
        "LOAD_FAST",
        "stmts"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.statements"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.source"
    ],
    [
        "LOAD_METHOD",
        "self.source.code_qualname"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_ATTR",
        "self.frame.f_code"
    ],
    [
        "CALL_METHOD",
        "self.source.code_qualname(self.frame.f_code)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.source"
    ],
    [
        "LOAD_METHOD",
        "self.source.asttokens"
    ],
    [
        "CALL_METHOD",
        "self.source.asttokens()"
    ],
    [
        "LOAD_METHOD",
        "self.source.asttokens().get_text"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.node"
    ],
    [
        "CALL_METHOD",
        "self.source.asttokens().get_text(self.node)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.source"
    ],
    [
        "LOAD_METHOD",
        "self.source.asttokens"
    ],
    [
        "CALL_METHOD",
        "self.source.asttokens()"
    ],
    [
        "LOAD_METHOD",
        "self.source.asttokens().get_text_range"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.node"
    ],
    [
        "CALL_METHOD",
        "self.source.asttokens().get_text_range(self.node)"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "QualnameVisitor"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "CALL_FUNCTION",
        "super(QualnameVisitor, self)"
    ],
    [
        "LOAD_METHOD",
        "super(QualnameVisitor, self).__init__"
    ],
    [
        "CALL_METHOD",
        "super(QualnameVisitor, self).__init__()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.stack"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.qualnames"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.name"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_METHOD",
        "self.stack.append"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "CALL_METHOD",
        "self.stack.append(name)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.qualnames"
    ],
    [
        "LOAD_METHOD",
        "self.qualnames.setdefault"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.lineno"
    ],
    [
        "LOAD_METHOD",
        "\".\".join"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "CALL_METHOD",
        "\".\".join(self.stack)"
    ],
    [
        "CALL_METHOD",
        "self.qualnames.setdefault((name, node.lineno), \".\".join(self.stack))"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_METHOD",
        "self.stack.append"
    ],
    [
        "CALL_METHOD",
        "self.stack.append('<locals>')"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Lambda"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, ast.Lambda)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.body"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.body"
    ],
    [
        "LOAD_FAST",
        "children"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.visit"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "CALL_METHOD",
        "self.visit(child)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_METHOD",
        "self.stack.pop"
    ],
    [
        "CALL_METHOD",
        "self.stack.pop()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_METHOD",
        "self.stack.pop"
    ],
    [
        "CALL_METHOD",
        "self.stack.pop()"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.iter_fields"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "ast.iter_fields(node)"
    ],
    [
        "LOAD_FAST",
        "field"
    ],
    [
        "COMPARE_OP",
        "field == 'body'"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.AST"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(child, ast.AST)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.visit"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "CALL_METHOD",
        "self.visit(child)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(child, list)"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "grandchild"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.AST"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(grandchild, ast.AST)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.visit"
    ],
    [
        "LOAD_FAST",
        "grandchild"
    ],
    [
        "CALL_METHOD",
        "self.visit(grandchild)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.visit_FunctionDef"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self.visit_FunctionDef(node, '<lambda>')"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_METHOD",
        "self.stack.append"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.name"
    ],
    [
        "CALL_METHOD",
        "self.stack.append(node.name)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.generic_visit"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self.generic_visit(node)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_METHOD",
        "self.stack.pop"
    ],
    [
        "CALL_METHOD",
        "self.stack.pop()"
    ],
    [
        "LOAD_GLOBAL",
        "getattr"
    ],
    [
        "LOAD_GLOBAL",
        "__future__"
    ],
    [
        "LOAD_FAST",
        "fname"
    ],
    [
        "CALL_FUNCTION",
        "getattr(__future__, fname)"
    ],
    [
        "LOAD_ATTR",
        "getattr(__future__, fname).compiler_flag"
    ],
    [
        "LOAD_GLOBAL",
        "compile"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "matching_code"
    ],
    [
        "LOAD_ATTR",
        "matching_code.co_filename"
    ],
    [
        "LOAD_GLOBAL",
        "future_flags"
    ],
    [
        "LOAD_FAST",
        "matching_code"
    ],
    [
        "LOAD_ATTR",
        "matching_code.co_flags"
    ],
    [
        "BINARY_AND",
        "future_flags & matching_code.co_flags"
    ],
    [
        "CALL_FUNCTION_KW",
        "compile(\n        source,\n        matching_code.co_filename,\n        'exec',\n        flags=future_flags & matching_code.co_flags,\n        dont_inherit=True,\n    )"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.frame"
    ],
    [
        "LOAD_FAST",
        "tree"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.tree"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_code"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_lasti"
    ],
    [
        "BINARY_SUBSCR",
        "frame.f_code.co_code[frame.f_lasti]"
    ],
    [
        "LOAD_GLOBAL",
        "PY3"
    ],
    [
        "LOAD_GLOBAL",
        "ord"
    ],
    [
        "LOAD_FAST",
        "b"
    ],
    [
        "CALL_FUNCTION",
        "ord(b)"
    ],
    [
        "LOAD_GLOBAL",
        "dis"
    ],
    [
        "LOAD_ATTR",
        "dis.opname"
    ],
    [
        "LOAD_FAST",
        "b"
    ],
    [
        "BINARY_SUBSCR",
        "dis.opname[b]"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "LOAD_METHOD",
        "op_name.startswith"
    ],
    [
        "CALL_METHOD",
        "op_name.startswith('CALL_')"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Call"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "COMPARE_OP",
        "op_name == 'BINARY_SUBSCR'"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Subscript"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "LOAD_METHOD",
        "op_name.startswith"
    ],
    [
        "CALL_METHOD",
        "op_name.startswith('BINARY_')"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.BinOp"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "LOAD_METHOD",
        "op_name.startswith"
    ],
    [
        "CALL_METHOD",
        "op_name.startswith('UNARY_')"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.UnaryOp"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "COMPARE_OP",
        "op_name in ('LOAD_ATTR', 'LOAD_METHOD', 'LOOKUP_METHOD')"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Attribute"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "COMPARE_OP",
        "op_name == 'COMPARE_OP'"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Compare"
    ],
    [
        "LOAD_GLOBAL",
        "RuntimeError"
    ],
    [
        "LOAD_FAST",
        "op_name"
    ],
    [
        "CALL_FUNCTION",
        "RuntimeError(op_name)"
    ],
    [
        "LOAD_GLOBAL",
        "lock"
    ],
    [
        "LOAD_FAST",
        "stmts"
    ],
    [
        "LOAD_GLOBAL",
        "only"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.matching_nodes"
    ],
    [
        "LOAD_FAST",
        "exprs"
    ],
    [
        "CALL_METHOD",
        "self.matching_nodes(exprs)"
    ],
    [
        "CALL_FUNCTION",
        "list(self.matching_nodes(exprs))"
    ],
    [
        "CALL_FUNCTION",
        "only(list(self.matching_nodes(exprs)))"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.result"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.walk"
    ],
    [
        "LOAD_FAST",
        "stmt"
    ],
    [
        "CALL_METHOD",
        "ast.walk(stmt)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_DEREF",
        "typ"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, typ)"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(node, \"ctx\")"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.ctx"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Load"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node.ctx, ast.Load)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "enumerate"
    ],
    [
        "LOAD_FAST",
        "exprs"
    ],
    [
        "CALL_FUNCTION",
        "enumerate(exprs)"
    ],
    [
        "LOAD_GLOBAL",
        "get_setter"
    ],
    [
        "LOAD_FAST",
        "expr"
    ],
    [
        "CALL_FUNCTION",
        "get_setter(expr)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.BinOp"
    ],
    [
        "LOAD_FAST",
        "expr"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.Pow"
    ],
    [
        "CALL_METHOD",
        "ast.Pow()"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Str"
    ],
    [
        "LOAD_GLOBAL",
        "sentinel"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.Str(s=sentinel)"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.BinOp(\n                left=expr,\n                op=ast.Pow(),\n                right=ast.Str(s=sentinel),\n            )"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.fix_missing_locations"
    ],
    [
        "LOAD_FAST",
        "replacement"
    ],
    [
        "CALL_METHOD",
        "ast.fix_missing_locations(replacement)"
    ],
    [
        "LOAD_FAST",
        "setter"
    ],
    [
        "LOAD_FAST",
        "replacement"
    ],
    [
        "CALL_FUNCTION",
        "setter(replacement)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.compile_instructions"
    ],
    [
        "CALL_METHOD",
        "self.compile_instructions()"
    ],
    [
        "LOAD_GLOBAL",
        "SyntaxError"
    ],
    [
        "LOAD_FAST",
        "setter"
    ],
    [
        "LOAD_FAST",
        "expr"
    ],
    [
        "CALL_FUNCTION",
        "setter(expr)"
    ],
    [
        "LOAD_GLOBAL",
        "enumerate"
    ],
    [
        "LOAD_FAST",
        "instructions"
    ],
    [
        "CALL_FUNCTION",
        "enumerate(instructions)"
    ],
    [
        "LOAD_FAST",
        "indices"
    ],
    [
        "LOAD_GLOBAL",
        "only"
    ],
    [
        "LOAD_FAST",
        "indices"
    ],
    [
        "CALL_FUNCTION",
        "only(indices)"
    ],
    [
        "BINARY_SUBTRACT",
        "only(indices) - 1"
    ],
    [
        "LOAD_FAST",
        "instructions"
    ],
    [
        "LOAD_FAST",
        "arg_index"
    ],
    [
        "BINARY_SUBSCR",
        "instructions[arg_index]"
    ],
    [
        "LOAD_ATTR",
        "instructions[arg_index].opname"
    ],
    [
        "COMPARE_OP",
        "instructions[arg_index].opname == 'EXTENDED_ARG'"
    ],
    [
        "LOAD_FAST",
        "instructions"
    ],
    [
        "LOAD_FAST",
        "arg_index"
    ],
    [
        "BINARY_SUBSCR",
        "instructions[arg_index]"
    ],
    [
        "LOAD_ATTR",
        "instructions[arg_index].offset"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_ATTR",
        "self.frame.f_lasti"
    ],
    [
        "COMPARE_OP",
        "instructions[arg_index].offset == self.frame.f_lasti"
    ],
    [
        "LOAD_FAST",
        "expr"
    ],
    [
        "LOAD_FAST",
        "instruction"
    ],
    [
        "LOAD_ATTR",
        "instruction.argval"
    ],
    [
        "LOAD_GLOBAL",
        "sentinel"
    ],
    [
        "COMPARE_OP",
        "instruction.argval == sentinel"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "LOAD_GLOBAL",
        "compile_similar_to"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tree"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_ATTR",
        "self.frame.f_code"
    ],
    [
        "CALL_FUNCTION",
        "compile_similar_to(self.tree, self.frame.f_code)"
    ],
    [
        "LOAD_GLOBAL",
        "only"
    ],
    [
        "LOAD_GLOBAL",
        "find_codes"
    ],
    [
        "LOAD_FAST",
        "module_code"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_ATTR",
        "self.frame.f_code"
    ],
    [
        "CALL_FUNCTION",
        "find_codes(module_code, self.frame.f_code)"
    ],
    [
        "CALL_FUNCTION",
        "only(find_codes(module_code, self.frame.f_code))"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "LOAD_GLOBAL",
        "get_instructions"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "CALL_FUNCTION",
        "get_instructions(code)"
    ],
    [
        "CALL_FUNCTION",
        "list(get_instructions(code))"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.iter_fields"
    ],
    [
        "LOAD_DEREF",
        "parent"
    ],
    [
        "CALL_METHOD",
        "ast.iter_fields(parent)"
    ],
    [
        "LOAD_DEREF",
        "field"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "COMPARE_OP",
        "field is node"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_DEREF",
        "field"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(field, list)"
    ],
    [
        "LOAD_GLOBAL",
        "enumerate"
    ],
    [
        "LOAD_DEREF",
        "field"
    ],
    [
        "CALL_FUNCTION",
        "enumerate(field)"
    ],
    [
        "LOAD_FAST",
        "item"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "COMPARE_OP",
        "item is node"
    ],
    [
        "LOAD_FAST",
        "setter"
    ],
    [
        "LOAD_GLOBAL",
        "setattr"
    ],
    [
        "LOAD_DEREF",
        "parent"
    ],
    [
        "LOAD_DEREF",
        "name"
    ],
    [
        "LOAD_FAST",
        "new_node"
    ],
    [
        "CALL_FUNCTION",
        "setattr(parent, name, new_node)"
    ],
    [
        "LOAD_FAST",
        "new_node"
    ],
    [
        "LOAD_DEREF",
        "field"
    ],
    [
        "LOAD_DEREF",
        "i"
    ],
    [
        "STORE_SUBSCR",
        "field[i]"
    ],
    [
        "LOAD_DEREF",
        "matches"
    ],
    [
        "LOAD_FAST",
        "root_code"
    ],
    [
        "CALL_FUNCTION",
        "matches(root_code)"
    ],
    [
        "LOAD_DEREF",
        "code_options"
    ],
    [
        "LOAD_METHOD",
        "code_options.append"
    ],
    [
        "LOAD_FAST",
        "root_code"
    ],
    [
        "CALL_METHOD",
        "code_options.append(root_code)"
    ],
    [
        "LOAD_DEREF",
        "finder"
    ],
    [
        "LOAD_FAST",
        "root_code"
    ],
    [
        "CALL_FUNCTION",
        "finder(root_code)"
    ],
    [
        "LOAD_DEREF",
        "code_options"
    ],
    [
        "LOAD_GLOBAL",
        "all"
    ],
    [
        "LOAD_GLOBAL",
        "attrgetter"
    ],
    [
        "CALL_FUNCTION",
        "attrgetter('co_firstlineno')"
    ],
    [
        "LOAD_GLOBAL",
        "attrgetter"
    ],
    [
        "CALL_FUNCTION",
        "attrgetter('co_name')"
    ],
    [
        "LOAD_GLOBAL",
        "code_names"
    ],
    [
        "CALL_FUNCTION",
        "all(\n            f(c) == f(matching)\n            for f in [\n                attrgetter('co_firstlineno'),\n                attrgetter('co_name'),\n                code_names,\n            ]\n        )"
    ],
    [
        "LOAD_FAST",
        "f"
    ],
    [
        "LOAD_DEREF",
        "c"
    ],
    [
        "CALL_FUNCTION",
        "f(c)"
    ],
    [
        "LOAD_FAST",
        "f"
    ],
    [
        "LOAD_DEREF",
        "matching"
    ],
    [
        "CALL_FUNCTION",
        "f(matching)"
    ],
    [
        "COMPARE_OP",
        "f(c) == f(matching)"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_consts"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_METHOD",
        "inspect.iscode"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_METHOD",
        "inspect.iscode(const)"
    ],
    [
        "LOAD_DEREF",
        "matches"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_FUNCTION",
        "matches(const)"
    ],
    [
        "LOAD_DEREF",
        "code_options"
    ],
    [
        "LOAD_METHOD",
        "code_options.append"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_METHOD",
        "code_options.append(const)"
    ],
    [
        "LOAD_DEREF",
        "finder"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_FUNCTION",
        "finder(const)"
    ],
    [
        "LOAD_GLOBAL",
        "frozenset"
    ],
    [
        "CALL_FUNCTION",
        "frozenset()"
    ],
    [
        "LOAD_METHOD",
        "frozenset().union"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_names"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_varnames"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_freevars"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_cellvars"
    ],
    [
        "CALL_METHOD",
        "frozenset().union(\n        code.co_names,\n        code.co_varnames,\n        code.co_freevars,\n        code.co_cellvars,\n    )"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.stmt"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, ast.stmt)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.parent"
    ],
    [
        "LOAD_FAST",
        "node"
    ]
]