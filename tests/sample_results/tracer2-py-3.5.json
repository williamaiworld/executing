[
    [
        "LOAD_NAME",
        "find_repr_function"
    ],
    [
        "LOAD_NAME",
        "six"
    ],
    [
        "LOAD_ATTR",
        "six.text_type"
    ],
    [
        "CALL_FUNCTION",
        "find_repr_function(six.text_type)"
    ],
    [
        "STORE_ATTR",
        "find_repr_function(six.text_type).maxparts"
    ],
    [
        "LOAD_NAME",
        "find_repr_function"
    ],
    [
        "LOAD_NAME",
        "six"
    ],
    [
        "LOAD_ATTR",
        "six.binary_type"
    ],
    [
        "CALL_FUNCTION",
        "find_repr_function(six.binary_type)"
    ],
    [
        "STORE_ATTR",
        "find_repr_function(six.binary_type).maxparts"
    ],
    [
        "LOAD_NAME",
        "find_repr_function"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "CALL_FUNCTION",
        "find_repr_function(object)"
    ],
    [
        "STORE_ATTR",
        "find_repr_function(object).maxparts"
    ],
    [
        "LOAD_NAME",
        "find_repr_function"
    ],
    [
        "LOAD_NAME",
        "int"
    ],
    [
        "CALL_FUNCTION",
        "find_repr_function(int)"
    ],
    [
        "STORE_ATTR",
        "find_repr_function(int).maxparts"
    ],
    [
        "LOAD_NAME",
        "cheap_repr"
    ],
    [
        "STORE_ATTR",
        "cheap_repr.suppression_threshold"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "threading"
    ],
    [
        "LOAD_ATTR",
        "threading.local"
    ],
    [
        "CALL_FUNCTION",
        "threading.local()"
    ],
    [
        "LOAD_NAME",
        "os"
    ],
    [
        "LOAD_ATTR",
        "os.path"
    ],
    [
        "LOAD_ATTR",
        "os.path.dirname"
    ],
    [
        "LOAD_ATTR",
        "(lambda: 0).__code__"
    ],
    [
        "LOAD_ATTR",
        "(lambda: 0).__code__.co_filename"
    ],
    [
        "CALL_FUNCTION",
        "os.path.dirname((lambda: 0).__code__.co_filename)"
    ],
    [
        "LOAD_NAME",
        "ImportError"
    ],
    [
        "LOAD_NAME",
        "os"
    ],
    [
        "LOAD_ATTR",
        "os.path"
    ],
    [
        "LOAD_ATTR",
        "os.path.dirname"
    ],
    [
        "LOAD_NAME",
        "birdseye"
    ],
    [
        "LOAD_ATTR",
        "birdseye.__file__"
    ],
    [
        "CALL_FUNCTION",
        "os.path.dirname(birdseye.__file__)"
    ],
    [
        "LOAD_NAME",
        "type"
    ],
    [
        "LOAD_NAME",
        "six"
    ],
    [
        "LOAD_ATTR",
        "six.add_metaclass"
    ],
    [
        "LOAD_NAME",
        "TracerMeta"
    ],
    [
        "CALL_FUNCTION",
        "six.add_metaclass(TracerMeta)"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "CALL_FUNCTION",
        "six.add_metaclass(TracerMeta)"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.local_reprs"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_lineno"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.last_line_no"
    ],
    [
        "LOAD_GLOBAL",
        "OrderedDict"
    ],
    [
        "CALL_FUNCTION",
        "OrderedDict()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.comprehension_variables"
    ],
    [
        "LOAD_GLOBAL",
        "Source"
    ],
    [
        "LOAD_ATTR",
        "Source.for_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "Source.for_frame(frame)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.source"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_flags"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_ATTR",
        "inspect.CO_GENERATOR"
    ],
    [
        "BINARY_AND",
        "frame.f_code.co_flags & inspect.CO_GENERATOR"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.is_generator"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.had_exception"
    ],
    [
        "LOAD_GLOBAL",
        "is_comprehension_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "is_comprehension_frame(frame)"
    ],
    [
        "LOAD_GLOBAL",
        "re"
    ],
    [
        "LOAD_ATTR",
        "re.match"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_name"
    ],
    [
        "CALL_FUNCTION",
        "re.match(r'<(\\w+)comp>', frame.f_code.co_name)"
    ],
    [
        "LOAD_ATTR",
        "re.match(r'<(\\w+)comp>', frame.f_code.co_name).group"
    ],
    [
        "CALL_FUNCTION",
        "re.match(r'<(\\w+)comp>', frame.f_code.co_name).group(1)"
    ],
    [
        "LOAD_ATTR",
        "re.match(r'<(\\w+)comp>', frame.f_code.co_name).group(1).title"
    ],
    [
        "CALL_FUNCTION",
        "re.match(r'<(\\w+)comp>', frame.f_code.co_name).group(1).title()"
    ],
    [
        "BINARY_ADD",
        "re.match(r'<(\\w+)comp>', frame.f_code.co_name).group(1).title()\n                    + u' comprehension'"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.comprehension_type"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.comprehension_type"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_ATTR",
        "self.frame.f_lineno"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.last_line_no"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.local_reprs"
    ],
    [
        "LOAD_GLOBAL",
        "OrderedDict"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.get_local_reprs"
    ],
    [
        "LOAD_FAST",
        "watch"
    ],
    [
        "LOAD_FAST",
        "watch_extras"
    ],
    [
        "CALL_FUNCTION",
        "self.get_local_reprs(watch, watch_extras)"
    ],
    [
        "CALL_FUNCTION",
        "OrderedDict(\n            (source, my_cheap_repr(value))\n            for source, value in\n            self.get_local_reprs(watch, watch_extras)\n        )"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.local_reprs"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.comprehension_type"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.local_reprs"
    ],
    [
        "LOAD_ATTR",
        "self.local_reprs.items"
    ],
    [
        "CALL_FUNCTION",
        "self.local_reprs.items()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.comprehension_variables"
    ],
    [
        "LOAD_ATTR",
        "self.comprehension_variables.setdefault"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "CALL_FUNCTION",
        "self.comprehension_variables.setdefault(name, [])"
    ],
    [
        "LOAD_FAST",
        "values"
    ],
    [
        "UNARY_NOT",
        "not values"
    ],
    [
        "LOAD_FAST",
        "values"
    ],
    [
        "BINARY_SUBSCR",
        "values[-1]"
    ],
    [
        "LOAD_FAST",
        "value_repr"
    ],
    [
        "COMPARE_OP",
        "values[-1] != value_repr"
    ],
    [
        "LOAD_FAST",
        "values"
    ],
    [
        "LOAD_ATTR",
        "values.append"
    ],
    [
        "LOAD_FAST",
        "value_repr"
    ],
    [
        "CALL_FUNCTION",
        "values.append(value_repr)"
    ],
    [
        "LOAD_GLOBAL",
        "truncate_list"
    ],
    [
        "LOAD_FAST",
        "values"
    ],
    [
        "CALL_FUNCTION",
        "truncate_list(values, 11)"
    ],
    [
        "LOAD_FAST",
        "values"
    ],
    [
        "STORE_SUBSCR",
        "values[:]"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "COMPARE_OP",
        "event in ('return', 'exception')"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.comprehension_variables"
    ],
    [
        "LOAD_ATTR",
        "self.comprehension_variables.items"
    ],
    [
        "CALL_FUNCTION",
        "self.comprehension_variables.items()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.local_reprs"
    ],
    [
        "LOAD_ATTR",
        "self.local_reprs.items"
    ],
    [
        "CALL_FUNCTION",
        "self.local_reprs.items()"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_FAST",
        "old_local_reprs"
    ],
    [
        "COMPARE_OP",
        "name not in old_local_reprs"
    ],
    [
        "LOAD_FAST",
        "old_local_reprs"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "BINARY_SUBSCR",
        "old_local_reprs[name]"
    ],
    [
        "LOAD_FAST",
        "value_repr"
    ],
    [
        "COMPARE_OP",
        "old_local_reprs[name] != value_repr"
    ],
    [
        "LOAD_FAST",
        "variables"
    ],
    [
        "LOAD_ATTR",
        "variables.append"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_FAST",
        "value_repr"
    ],
    [
        "CALL_FUNCTION",
        "variables.append((name, value_repr))"
    ],
    [
        "LOAD_FAST",
        "variables"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_GLOBAL",
        "my_cheap_repr"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "CALL_FUNCTION",
        "my_cheap_repr(value)"
    ],
    [
        "LOAD_FAST",
        "name"
    ],
    [
        "LOAD_ATTR",
        "', '.join"
    ],
    [
        "LOAD_FAST",
        "values"
    ],
    [
        "CALL_FUNCTION",
        "', '.join(values)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_varnames"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_cellvars"
    ],
    [
        "BINARY_ADD",
        "code.co_varnames + code.co_cellvars"
    ],
    [
        "LOAD_FAST",
        "code"
    ],
    [
        "LOAD_ATTR",
        "code.co_freevars"
    ],
    [
        "BINARY_ADD",
        "code.co_varnames + code.co_cellvars + code.co_freevars"
    ],
    [
        "LOAD_GLOBAL",
        "tuple"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_locals"
    ],
    [
        "LOAD_ATTR",
        "frame.f_locals.keys"
    ],
    [
        "CALL_FUNCTION",
        "frame.f_locals.keys()"
    ],
    [
        "CALL_FUNCTION",
        "tuple(frame.f_locals.keys())"
    ],
    [
        "BINARY_ADD",
        "code.co_varnames + code.co_cellvars + code.co_freevars + tuple(frame.f_locals.keys())"
    ],
    [
        "LOAD_GLOBAL",
        "sorted"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_locals"
    ],
    [
        "LOAD_ATTR",
        "frame.f_locals.items"
    ],
    [
        "CALL_FUNCTION",
        "frame.f_locals.items()"
    ],
    [
        "CALL_FUNCTION",
        "sorted(\n            frame.f_locals.items(),\n            key=lambda key_value: vars_order.index(key_value[0])\n        )"
    ],
    [
        "LOAD_FAST",
        "watch"
    ],
    [
        "LOAD_GLOBAL",
        "sorted"
    ],
    [
        "LOAD_FAST",
        "variable"
    ],
    [
        "LOAD_ATTR",
        "variable.items"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "variable.items(frame)"
    ],
    [
        "CALL_FUNCTION",
        "sorted(variable.items(frame))"
    ],
    [
        "LOAD_FAST",
        "result_items"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "LOAD_FAST",
        "watch_extras"
    ],
    [
        "LOAD_FAST",
        "extra"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "CALL_FUNCTION",
        "extra(source, value)"
    ],
    [
        "LOAD_GLOBAL",
        "Exception"
    ],
    [
        "LOAD_FAST",
        "pair"
    ],
    [
        "COMPARE_OP",
        "pair is not None"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "pair"
    ],
    [
        "CALL_FUNCTION",
        "len(pair)"
    ],
    [
        "COMPARE_OP",
        "len(pair) == 2"
    ],
    [
        "LOAD_FAST",
        "pair"
    ],
    [
        "LOAD_DEREF",
        "vars_order"
    ],
    [
        "LOAD_ATTR",
        "vars_order.index"
    ],
    [
        "LOAD_FAST",
        "key_value"
    ],
    [
        "BINARY_SUBSCR",
        "key_value[0]"
    ],
    [
        "CALL_FUNCTION",
        "vars_order.index(key_value[0])"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "TracerMeta"
    ],
    [
        "LOAD_FAST",
        "mcs"
    ],
    [
        "CALL_FUNCTION",
        "super(TracerMeta, mcs)"
    ],
    [
        "LOAD_ATTR",
        "super(TracerMeta, mcs).__new__"
    ],
    [
        "LOAD_FAST",
        "mcs"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "super(TracerMeta, mcs).__new__(mcs, *args, **kwargs)"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "CALL_FUNCTION",
        "result()"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "STORE_ATTR",
        "result.default"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_GLOBAL",
        "no_args_decorator"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION",
        "no_args_decorator(args, kwargs)"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "LOAD_ATTR",
        "cls.default"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "BINARY_SUBSCR",
        "args[0]"
    ],
    [
        "CALL_FUNCTION",
        "cls.default(args[0])"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "TracerMeta"
    ],
    [
        "LOAD_FAST",
        "cls"
    ],
    [
        "CALL_FUNCTION",
        "super(TracerMeta, cls)"
    ],
    [
        "LOAD_ATTR",
        "super(TracerMeta, cls).__call__"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "super(TracerMeta, cls).__call__(*args, **kwargs)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.default"
    ],
    [
        "LOAD_ATTR",
        "self.default.__enter__"
    ],
    [
        "CALL_FUNCTION",
        "self.default.__enter__(context=1)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.default"
    ],
    [
        "LOAD_ATTR",
        "self.default.__exit__"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "CALL_FUNCTION_VAR",
        "self.default.__exit__(*args, context=1)"
    ],
    [
        "LOAD_GLOBAL",
        "ensure_tuple"
    ],
    [
        "LOAD_FAST",
        "watch"
    ],
    [
        "CALL_FUNCTION",
        "ensure_tuple(watch)"
    ],
    [
        "LOAD_GLOBAL",
        "ensure_tuple"
    ],
    [
        "LOAD_FAST",
        "watch_explode"
    ],
    [
        "CALL_FUNCTION",
        "ensure_tuple(watch_explode)"
    ],
    [
        "BINARY_ADD",
        "[\n            v if isinstance(v, BaseVariable) else CommonVariable(v)\n            for v in ensure_tuple(watch)\n        ] + [\n            v if isinstance(v, BaseVariable) else Exploding(v)\n            for v in ensure_tuple(watch_explode)\n        ]"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.watch"
    ],
    [
        "LOAD_GLOBAL",
        "ArgDefaultDict"
    ],
    [
        "LOAD_GLOBAL",
        "FrameInfo"
    ],
    [
        "CALL_FUNCTION",
        "ArgDefaultDict(FrameInfo)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.frame_infos"
    ],
    [
        "LOAD_FAST",
        "depth"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.depth"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.depth"
    ],
    [
        "COMPARE_OP",
        "self.depth >= 1"
    ],
    [
        "LOAD_GLOBAL",
        "set"
    ],
    [
        "CALL_FUNCTION",
        "set()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.target_codes"
    ],
    [
        "LOAD_GLOBAL",
        "set"
    ],
    [
        "CALL_FUNCTION",
        "set()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.target_frames"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "LOAD_GLOBAL",
        "BaseVariable"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(v, BaseVariable)"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "LOAD_GLOBAL",
        "CommonVariable"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "CALL_FUNCTION",
        "CommonVariable(v)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "LOAD_GLOBAL",
        "BaseVariable"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(v, BaseVariable)"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "LOAD_GLOBAL",
        "Exploding"
    ],
    [
        "LOAD_FAST",
        "v"
    ],
    [
        "CALL_FUNCTION",
        "Exploding(v)"
    ],
    [
        "LOAD_GLOBAL",
        "iscoroutinefunction"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "CALL_FUNCTION",
        "iscoroutinefunction(function)"
    ],
    [
        "LOAD_GLOBAL",
        "NotImplementedError"
    ],
    [
        "CALL_FUNCTION",
        "NotImplementedError(\"coroutines are not supported, sorry!\")"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.target_codes"
    ],
    [
        "LOAD_ATTR",
        "self.target_codes.add"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "LOAD_ATTR",
        "function.__code__"
    ],
    [
        "CALL_FUNCTION",
        "self.target_codes.add(function.__code__)"
    ],
    [
        "LOAD_GLOBAL",
        "functools"
    ],
    [
        "LOAD_ATTR",
        "functools.wraps"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(function)"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(function)"
    ],
    [
        "LOAD_GLOBAL",
        "functools"
    ],
    [
        "LOAD_ATTR",
        "functools.wraps"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(function)"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(function)"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_ATTR",
        "inspect.isgeneratorfunction"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "CALL_FUNCTION",
        "inspect.isgeneratorfunction(function)"
    ],
    [
        "LOAD_FAST",
        "generator_wrapper"
    ],
    [
        "LOAD_FAST",
        "simple_wrapper"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "function(*args, **kwargs)"
    ],
    [
        "LOAD_DEREF",
        "function"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "function(*args, **kwargs)"
    ],
    [
        "LOAD_FAST",
        "gen"
    ],
    [
        "LOAD_ATTR",
        "gen.send"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_FAST",
        "method"
    ],
    [
        "LOAD_FAST",
        "incoming"
    ],
    [
        "CALL_FUNCTION",
        "method(incoming)"
    ],
    [
        "LOAD_GLOBAL",
        "StopIteration"
    ],
    [
        "LOAD_FAST",
        "gen"
    ],
    [
        "LOAD_ATTR",
        "gen.send"
    ],
    [
        "LOAD_FAST",
        "outgoing"
    ],
    [
        "LOAD_GLOBAL",
        "Exception"
    ],
    [
        "LOAD_FAST",
        "gen"
    ],
    [
        "LOAD_ATTR",
        "gen.throw"
    ],
    [
        "LOAD_FAST",
        "e"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.enabled"
    ],
    [
        "LOAD_GLOBAL",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys._getframe"
    ],
    [
        "LOAD_FAST",
        "context"
    ],
    [
        "BINARY_ADD",
        "context + 1"
    ],
    [
        "CALL_FUNCTION",
        "sys._getframe(context + 1)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._is_internal_frame"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "CALL_FUNCTION",
        "self._is_internal_frame(calling_frame)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.trace"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "STORE_ATTR",
        "calling_frame.f_trace"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.target_frames"
    ],
    [
        "LOAD_ATTR",
        "self.target_frames.add"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "CALL_FUNCTION",
        "self.target_frames.add(calling_frame)"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "STORE_ATTR",
        "self.config.last_frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.trace"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "CALL_FUNCTION",
        "self.trace(calling_frame, 'enter', None)"
    ],
    [
        "LOAD_GLOBAL",
        "thread_global"
    ],
    [
        "LOAD_ATTR",
        "thread_global.__dict__"
    ],
    [
        "LOAD_ATTR",
        "thread_global.__dict__.setdefault"
    ],
    [
        "CALL_FUNCTION",
        "thread_global.__dict__.setdefault('original_trace_functions', [])"
    ],
    [
        "LOAD_FAST",
        "stack"
    ],
    [
        "LOAD_ATTR",
        "stack.append"
    ],
    [
        "LOAD_GLOBAL",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys.gettrace"
    ],
    [
        "CALL_FUNCTION",
        "sys.gettrace()"
    ],
    [
        "CALL_FUNCTION",
        "stack.append(sys.gettrace())"
    ],
    [
        "LOAD_GLOBAL",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys.settrace"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.trace"
    ],
    [
        "CALL_FUNCTION",
        "sys.settrace(self.trace)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.enabled"
    ],
    [
        "LOAD_GLOBAL",
        "thread_global"
    ],
    [
        "LOAD_ATTR",
        "thread_global.original_trace_functions"
    ],
    [
        "LOAD_GLOBAL",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys.settrace"
    ],
    [
        "LOAD_FAST",
        "stack"
    ],
    [
        "LOAD_ATTR",
        "stack.pop"
    ],
    [
        "CALL_FUNCTION",
        "stack.pop()"
    ],
    [
        "CALL_FUNCTION",
        "sys.settrace(stack.pop())"
    ],
    [
        "LOAD_GLOBAL",
        "sys"
    ],
    [
        "LOAD_ATTR",
        "sys._getframe"
    ],
    [
        "LOAD_FAST",
        "context"
    ],
    [
        "BINARY_ADD",
        "context + 1"
    ],
    [
        "CALL_FUNCTION",
        "sys._getframe(context + 1)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.trace"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "CALL_FUNCTION",
        "self.trace(calling_frame, 'exit', None)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.target_frames"
    ],
    [
        "LOAD_ATTR",
        "self.target_frames.discard"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "CALL_FUNCTION",
        "self.target_frames.discard(calling_frame)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame_infos"
    ],
    [
        "LOAD_ATTR",
        "self.frame_infos.pop"
    ],
    [
        "LOAD_FAST",
        "calling_frame"
    ],
    [
        "CALL_FUNCTION",
        "self.frame_infos.pop(calling_frame, None)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_filename"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_filename.startswith"
    ],
    [
        "LOAD_GLOBAL",
        "internal_directories"
    ],
    [
        "CALL_FUNCTION",
        "frame.f_code.co_filename.startswith(internal_directories)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.target_codes"
    ],
    [
        "COMPARE_OP",
        "frame.f_code in self.target_codes"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.target_frames"
    ],
    [
        "COMPARE_OP",
        "frame in self.target_frames"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._is_traced_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "self._is_traced_frame(frame)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.depth"
    ],
    [
        "COMPARE_OP",
        "self.depth == 1"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._is_internal_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "self._is_internal_frame(frame)"
    ],
    [
        "LOAD_GLOBAL",
        "is_comprehension_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "is_comprehension_frame(frame)"
    ],
    [
        "UNARY_NOT",
        "not is_comprehension_frame(frame)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_GLOBAL",
        "is_comprehension_frame"
    ],
    [
        "LOAD_FAST",
        "candidate"
    ],
    [
        "CALL_FUNCTION",
        "is_comprehension_frame(candidate)"
    ],
    [
        "LOAD_FAST",
        "candidate"
    ],
    [
        "LOAD_ATTR",
        "candidate.f_back"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._is_traced_frame"
    ],
    [
        "LOAD_FAST",
        "candidate"
    ],
    [
        "CALL_FUNCTION",
        "self._is_traced_frame(candidate)"
    ],
    [
        "LOAD_FAST",
        "candidate"
    ],
    [
        "LOAD_ATTR",
        "candidate.f_back"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.depth"
    ],
    [
        "COMPARE_OP",
        "i >= self.depth"
    ],
    [
        "LOAD_FAST",
        "candidate"
    ],
    [
        "COMPARE_OP",
        "candidate is None"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._is_internal_frame"
    ],
    [
        "LOAD_FAST",
        "candidate"
    ],
    [
        "CALL_FUNCTION",
        "self._is_internal_frame(candidate)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.thread_local"
    ],
    [
        "LOAD_FAST",
        "thread_local"
    ],
    [
        "LOAD_ATTR",
        "thread_local.__dict__"
    ],
    [
        "LOAD_ATTR",
        "thread_local.__dict__.setdefault"
    ],
    [
        "CALL_FUNCTION",
        "thread_local.__dict__.setdefault('depth', -1)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame_infos"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "BINARY_SUBSCR",
        "self.frame_infos[frame]"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "COMPARE_OP",
        "event in ('call', 'enter')"
    ],
    [
        "LOAD_FAST",
        "thread_local"
    ],
    [
        "STORE_ATTR",
        "thread_local.depth"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.last_frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.last_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "COMPARE_OP",
        "self.config.last_frame is not frame"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.last_line_no"
    ],
    [
        "LOAD_GLOBAL",
        "Event"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "LOAD_FAST",
        "arg"
    ],
    [
        "LOAD_FAST",
        "thread_local"
    ],
    [
        "LOAD_ATTR",
        "thread_local.depth"
    ],
    [
        "LOAD_FAST",
        "line_no"
    ],
    [
        "CALL_FUNCTION",
        "Event(frame_info, event, arg, thread_local.depth, line_no=line_no)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.formatter"
    ],
    [
        "LOAD_ATTR",
        "self.config.formatter.format_line_only"
    ],
    [
        "LOAD_FAST",
        "trace_event"
    ],
    [
        "CALL_FUNCTION",
        "self.config.formatter.format_line_only(trace_event)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.write"
    ],
    [
        "LOAD_FAST",
        "line"
    ],
    [
        "CALL_FUNCTION",
        "self.config.write(line)"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "COMPARE_OP",
        "event == 'exception'"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "STORE_ATTR",
        "frame_info.had_exception"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "STORE_ATTR",
        "self.config.last_frame"
    ],
    [
        "LOAD_GLOBAL",
        "Event"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "LOAD_FAST",
        "arg"
    ],
    [
        "LOAD_FAST",
        "thread_local"
    ],
    [
        "LOAD_ATTR",
        "thread_local.depth"
    ],
    [
        "CALL_FUNCTION",
        "Event(frame_info, event, arg, thread_local.depth)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_name"
    ],
    [
        "COMPARE_OP",
        "frame.f_code.co_name == '<genexpr>'"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "COMPARE_OP",
        "event not in ('return', 'exception')"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.update_variables"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.watch"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.watch_extras"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "CALL_FUNCTION",
        "frame_info.update_variables(\n                self.watch,\n                self.config.watch_extras,\n                event,\n            )"
    ],
    [
        "LOAD_FAST",
        "trace_event"
    ],
    [
        "STORE_ATTR",
        "trace_event.variables"
    ],
    [
        "LOAD_FAST",
        "event"
    ],
    [
        "COMPARE_OP",
        "event in ('return', 'exit')"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame_infos"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "thread_local"
    ],
    [
        "STORE_ATTR",
        "thread_local.depth"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.formatter"
    ],
    [
        "LOAD_ATTR",
        "self.config.formatter.format"
    ],
    [
        "LOAD_FAST",
        "trace_event"
    ],
    [
        "CALL_FUNCTION",
        "self.config.formatter.format(trace_event)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.write"
    ],
    [
        "LOAD_FAST",
        "formatted"
    ],
    [
        "CALL_FUNCTION",
        "self.config.write(formatted)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.trace"
    ],
    [
        "LOAD_FAST",
        "config"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.config"
    ],
    [
        "LOAD_GLOBAL",
        "NO_ASTTOKENS"
    ],
    [
        "LOAD_GLOBAL",
        "Exception"
    ],
    [
        "CALL_FUNCTION",
        "Exception(\"birdseye doesn't support this version of Python\")"
    ],
    [
        "LOAD_GLOBAL",
        "ImportError"
    ],
    [
        "LOAD_GLOBAL",
        "Exception"
    ],
    [
        "CALL_FUNCTION",
        "Exception(\"You must install birdseye separately to use spy: pip install birdseye\")"
    ],
    [
        "LOAD_GLOBAL",
        "no_args_decorator"
    ],
    [
        "LOAD_DEREF",
        "args"
    ],
    [
        "LOAD_DEREF",
        "kwargs"
    ],
    [
        "CALL_FUNCTION",
        "no_args_decorator(args, kwargs)"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._trace"
    ],
    [
        "LOAD_DEREF",
        "args"
    ],
    [
        "BINARY_SUBSCR",
        "args[0]"
    ],
    [
        "CALL_FUNCTION",
        "self._trace(args[0])"
    ],
    [
        "LOAD_FAST",
        "decorator"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._trace"
    ],
    [
        "LOAD_FAST",
        "func"
    ],
    [
        "LOAD_DEREF",
        "args"
    ],
    [
        "LOAD_DEREF",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "self._trace(func, *args, **kwargs)"
    ],
    [
        "LOAD_FAST",
        "eye"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_FUNCTION",
        "eye(func)"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.snoop"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "self.config.snoop(*args, **kwargs)"
    ],
    [
        "LOAD_DEREF",
        "traced"
    ],
    [
        "CALL_FUNCTION",
        "self.config.snoop(*args, **kwargs)(traced)"
    ],
    [
        "LOAD_GLOBAL",
        "functools"
    ],
    [
        "LOAD_ATTR",
        "functools.wraps"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(func)"
    ],
    [
        "CALL_FUNCTION",
        "functools.wraps(func)"
    ],
    [
        "LOAD_FAST",
        "wrapper"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.config"
    ],
    [
        "LOAD_ATTR",
        "self.config.enabled"
    ],
    [
        "LOAD_DEREF",
        "traced"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_FAST",
        "final_func"
    ],
    [
        "LOAD_FAST",
        "func_args"
    ],
    [
        "LOAD_FAST",
        "func_kwargs"
    ],
    [
        "CALL_FUNCTION_VAR_KW",
        "final_func(*func_args, **func_kwargs)"
    ]
]