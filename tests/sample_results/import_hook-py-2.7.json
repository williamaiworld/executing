[
    [
        "LOAD_NAME", 
        "object"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self._spec"
    ], 
    [
        "LOAD_FAST", 
        "source"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.source"
    ], 
    [
        "LOAD_FAST", 
        "deep"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.deep"
    ], 
    [
        "LOAD_FAST", 
        "eye"
    ], 
    [
        "LOAD_ATTR", 
        "eye.exec_string"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.source"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec.origin"
    ], 
    [
        "LOAD_FAST", 
        "module"
    ], 
    [
        "LOAD_ATTR", 
        "module.__dict__"
    ], 
    [
        "LOAD_FAST", 
        "module"
    ], 
    [
        "LOAD_ATTR", 
        "module.__dict__"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.deep"
    ], 
    [
        "CALL_FUNCTION", 
        "eye.exec_string(\n            source=self.source,\n            filename=self._spec.origin,\n            globs=module.__dict__,\n            locs=module.__dict__,\n            deep=self.deep,\n        )"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec.loader"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec.loader.get_filename"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "CALL_FUNCTION", 
        "self._spec.loader.get_filename(fullname)"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec.loader"
    ], 
    [
        "LOAD_ATTR", 
        "self._spec.loader.is_package"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "CALL_FUNCTION", 
        "self._spec.loader.is_package(fullname)"
    ], 
    [
        "LOAD_GLOBAL", 
        "sys"
    ], 
    [
        "LOAD_ATTR", 
        "sys.meta_path"
    ], 
    [
        "LOAD_FAST", 
        "finder"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "COMPARE_OP", 
        "finder is self"
    ], 
    [
        "LOAD_FAST", 
        "finder"
    ], 
    [
        "LOAD_ATTR", 
        "finder.__module__"
    ], 
    [
        "COMPARE_OP", 
        "'pytest' in finder.__module__"
    ], 
    [
        "LOAD_GLOBAL", 
        "hasattr"
    ], 
    [
        "LOAD_FAST", 
        "finder"
    ], 
    [
        "CALL_FUNCTION", 
        "hasattr(finder, 'find_spec')"
    ], 
    [
        "LOAD_FAST", 
        "finder"
    ], 
    [
        "LOAD_ATTR", 
        "finder.find_spec"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "LOAD_FAST", 
        "path"
    ], 
    [
        "LOAD_FAST", 
        "target"
    ], 
    [
        "CALL_FUNCTION", 
        "finder.find_spec(fullname, path, target=target)"
    ], 
    [
        "LOAD_GLOBAL", 
        "hasattr"
    ], 
    [
        "LOAD_FAST", 
        "finder"
    ], 
    [
        "CALL_FUNCTION", 
        "hasattr(finder, 'load_module')"
    ], 
    [
        "LOAD_GLOBAL", 
        "spec_from_loader"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "LOAD_FAST", 
        "finder"
    ], 
    [
        "CALL_FUNCTION", 
        "spec_from_loader(fullname, finder)"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "COMPARE_OP", 
        "spec is not None"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_ATTR", 
        "spec.origin"
    ], 
    [
        "COMPARE_OP", 
        "spec.origin != 'builtin'"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self._find_plain_spec"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "LOAD_FAST", 
        "path"
    ], 
    [
        "LOAD_FAST", 
        "target"
    ], 
    [
        "CALL_FUNCTION", 
        "self._find_plain_spec(fullname, path, target)"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "COMPARE_OP", 
        "spec is None"
    ], 
    [
        "LOAD_GLOBAL", 
        "hasattr"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_ATTR", 
        "spec.loader"
    ], 
    [
        "CALL_FUNCTION", 
        "hasattr(spec.loader, 'get_source')"
    ], 
    [
        "LOAD_GLOBAL", 
        "callable"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_ATTR", 
        "spec.loader"
    ], 
    [
        "LOAD_ATTR", 
        "spec.loader.get_source"
    ], 
    [
        "CALL_FUNCTION", 
        "callable(spec.loader.get_source)"
    ], 
    [
        "UNARY_NOT", 
        "not (hasattr(spec.loader, 'get_source') and\n                                callable(spec.loader.get_source))"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "COMPARE_OP", 
        "fullname != 'org'"
    ], 
    [
        "LOAD_GLOBAL", 
        "logging"
    ], 
    [
        "LOAD_ATTR", 
        "logging.debug"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "CALL_FUNCTION", 
        "logging.debug('Failed finding spec for %s', fullname)"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_ATTR", 
        "spec.loader"
    ], 
    [
        "LOAD_ATTR", 
        "spec.loader.get_source"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "CALL_FUNCTION", 
        "spec.loader.get_source(fullname)"
    ], 
    [
        "LOAD_GLOBAL", 
        "ImportError"
    ], 
    [
        "LOAD_GLOBAL", 
        "logging"
    ], 
    [
        "LOAD_ATTR", 
        "logging.debug"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "CALL_FUNCTION", 
        "logging.debug('Loader for %s was unable to find the sources',\n                          fullname)"
    ], 
    [
        "LOAD_GLOBAL", 
        "Exception"
    ], 
    [
        "LOAD_GLOBAL", 
        "logging"
    ], 
    [
        "LOAD_ATTR", 
        "logging.exception"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "CALL_FUNCTION", 
        "logging.exception('Loader for %s raised an error', fullname)"
    ], 
    [
        "LOAD_FAST", 
        "source"
    ], 
    [
        "UNARY_NOT", 
        "not source"
    ], 
    [
        "LOAD_FAST", 
        "source"
    ], 
    [
        "COMPARE_OP", 
        "'birdseye' not in source"
    ], 
    [
        "LOAD_GLOBAL", 
        "should_trace"
    ], 
    [
        "LOAD_FAST", 
        "source"
    ], 
    [
        "CALL_FUNCTION", 
        "should_trace(source)"
    ], 
    [
        "LOAD_FAST", 
        "trace_stmt"
    ], 
    [
        "LOAD_GLOBAL", 
        "BirdsEyeLoader"
    ], 
    [
        "LOAD_FAST", 
        "spec"
    ], 
    [
        "LOAD_FAST", 
        "source"
    ], 
    [
        "LOAD_FAST", 
        "deep"
    ], 
    [
        "CALL_FUNCTION", 
        "BirdsEyeLoader(spec, source, deep)"
    ], 
    [
        "LOAD_GLOBAL", 
        "spec_from_loader"
    ], 
    [
        "LOAD_FAST", 
        "fullname"
    ], 
    [
        "LOAD_FAST", 
        "loader"
    ], 
    [
        "CALL_FUNCTION", 
        "spec_from_loader(fullname, loader)"
    ], 
    [
        "LOAD_GLOBAL", 
        "False"
    ], 
    [
        "LOAD_GLOBAL", 
        "ast"
    ], 
    [
        "LOAD_ATTR", 
        "ast.parse"
    ], 
    [
        "LOAD_FAST", 
        "source"
    ], 
    [
        "CALL_FUNCTION", 
        "ast.parse(source)"
    ], 
    [
        "LOAD_ATTR", 
        "ast.parse(source).body"
    ], 
    [
        "LOAD_GLOBAL", 
        "isinstance"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_GLOBAL", 
        "ast"
    ], 
    [
        "LOAD_ATTR", 
        "ast.Import"
    ], 
    [
        "CALL_FUNCTION", 
        "isinstance(stmt, ast.Import)"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_ATTR", 
        "stmt.names"
    ], 
    [
        "LOAD_FAST", 
        "alias"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name.startswith"
    ], 
    [
        "CALL_FUNCTION", 
        "alias.name.startswith('birdseye.trace_module')"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_FAST", 
        "alias"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name.endswith"
    ], 
    [
        "CALL_FUNCTION", 
        "alias.name.endswith('deep')"
    ], 
    [
        "LOAD_GLOBAL", 
        "True"
    ], 
    [
        "LOAD_GLOBAL", 
        "isinstance"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_GLOBAL", 
        "ast"
    ], 
    [
        "LOAD_ATTR", 
        "ast.ImportFrom"
    ], 
    [
        "CALL_FUNCTION", 
        "isinstance(stmt, ast.ImportFrom)"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_ATTR", 
        "stmt.module"
    ], 
    [
        "COMPARE_OP", 
        "stmt.module == 'birdseye'"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_ATTR", 
        "stmt.names"
    ], 
    [
        "LOAD_FAST", 
        "alias"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name.startswith"
    ], 
    [
        "CALL_FUNCTION", 
        "alias.name.startswith('trace_module')"
    ], 
    [
        "LOAD_FAST", 
        "stmt"
    ], 
    [
        "LOAD_FAST", 
        "alias"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name"
    ], 
    [
        "LOAD_ATTR", 
        "alias.name.endswith"
    ], 
    [
        "CALL_FUNCTION", 
        "alias.name.endswith('deep')"
    ], 
    [
        "LOAD_GLOBAL", 
        "True"
    ], 
    [
        "LOAD_FAST", 
        "deep"
    ], 
    [
        "LOAD_FAST", 
        "trace_stmt"
    ]
]