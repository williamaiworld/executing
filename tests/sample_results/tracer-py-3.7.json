[
    [
        "LOAD_NAME",
        "standard_library"
    ],
    [
        "LOAD_METHOD",
        "standard_library.install_aliases"
    ],
    [
        "CALL_METHOD",
        "standard_library.install_aliases()"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "NamedTuple"
    ],
    [
        "LOAD_NAME",
        "Optional"
    ],
    [
        "LOAD_NAME",
        "Union"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.expr"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.stmt"
    ],
    [
        "BINARY_SUBSCR",
        "Union[ast.expr, ast.stmt]"
    ],
    [
        "BINARY_SUBSCR",
        "Optional[Union[ast.expr, ast.stmt]]"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.AST"
    ],
    [
        "LOAD_NAME",
        "FrameType"
    ],
    [
        "LOAD_NAME",
        "FrameType"
    ],
    [
        "CALL_FUNCTION",
        "NamedTuple('EnterCallInfo', [\n\n    # Node  from where the call was made\n    ('call_node', Optional[Union[ast.expr, ast.stmt]]),\n\n    # Node where the call begins\n    ('enter_node', ast.AST),\n\n    # Frame from which the call was made\n    ('caller_frame', FrameType),\n\n    # Frame of the call\n    ('current_frame', FrameType)])"
    ],
    [
        "LOAD_NAME",
        "NamedTuple"
    ],
    [
        "LOAD_NAME",
        "Optional"
    ],
    [
        "LOAD_NAME",
        "Union"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.expr"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.stmt"
    ],
    [
        "BINARY_SUBSCR",
        "Union[ast.expr, ast.stmt]"
    ],
    [
        "BINARY_SUBSCR",
        "Optional[Union[ast.expr, ast.stmt]]"
    ],
    [
        "LOAD_NAME",
        "Optional"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Return"
    ],
    [
        "BINARY_SUBSCR",
        "Optional[ast.Return]"
    ],
    [
        "LOAD_NAME",
        "FrameType"
    ],
    [
        "LOAD_NAME",
        "FrameType"
    ],
    [
        "LOAD_NAME",
        "Any"
    ],
    [
        "LOAD_NAME",
        "Optional"
    ],
    [
        "LOAD_NAME",
        "Exception"
    ],
    [
        "BINARY_SUBSCR",
        "Optional[Exception]"
    ],
    [
        "LOAD_NAME",
        "Optional"
    ],
    [
        "LOAD_NAME",
        "TracebackType"
    ],
    [
        "BINARY_SUBSCR",
        "Optional[TracebackType]"
    ],
    [
        "CALL_FUNCTION",
        "NamedTuple('ExitCallInfo', [\n\n    # Node  from where the call was made\n    ('call_node', Optional[Union[ast.expr, ast.stmt]]),\n\n    # Node where the call explicitly returned\n    ('return_node', Optional[ast.Return]),\n\n    # Frame from which the call was made\n    ('caller_frame', FrameType),\n\n    # Frame of the call\n    ('current_frame', FrameType),\n\n    # Node where the call explicitly returned\n    ('return_value', Any),\n\n    # Exception raised in the call causing it to end,\n    # will propagate to the caller\n    ('exc_value', Optional[Exception]),\n\n    # Traceback corresponding to exc_value\n    ('exc_tb', Optional[TracebackType])])"
    ],
    [
        "LOAD_NAME",
        "namedtuple"
    ],
    [
        "CALL_FUNCTION",
        "namedtuple('ChangeValue', 'value')"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.NodeTransformer"
    ],
    [
        "LOAD_NAME",
        "object"
    ],
    [
        "LOAD_NAME",
        "Union"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.For"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.While"
    ],
    [
        "LOAD_NAME",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.comprehension"
    ],
    [
        "BINARY_SUBSCR",
        "Union[ast.For, ast.While, ast.comprehension]"
    ],
    [
        "LOAD_GLOBAL",
        "compile"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.PyCF_ONLY_AST"
    ],
    [
        "LOAD_FAST",
        "flags"
    ],
    [
        "BINARY_OR",
        "ast.PyCF_ONLY_AST | flags"
    ],
    [
        "CALL_FUNCTION_KW",
        "compile(source, filename, 'exec', ast.PyCF_ONLY_AST | flags, dont_inherit=True)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.root"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.nodes"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.set_basic_node_attributes"
    ],
    [
        "CALL_METHOD",
        "self.set_basic_node_attributes()"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer.parse_extra"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.root"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "CALL_METHOD",
        "tracer.parse_extra(self.root, source, filename)"
    ],
    [
        "LOAD_FAST",
        "new_root"
    ],
    [
        "COMPARE_OP",
        "new_root is not None"
    ],
    [
        "LOAD_FAST",
        "new_root"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.root"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.set_basic_node_attributes"
    ],
    [
        "CALL_METHOD",
        "self.set_basic_node_attributes()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.set_enter_call_nodes"
    ],
    [
        "CALL_METHOD",
        "self.set_enter_call_nodes()"
    ],
    [
        "LOAD_GLOBAL",
        "deepcopy"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.root"
    ],
    [
        "CALL_FUNCTION",
        "deepcopy(self.root)"
    ],
    [
        "LOAD_GLOBAL",
        "_NodeVisitor"
    ],
    [
        "CALL_FUNCTION",
        "_NodeVisitor()"
    ],
    [
        "LOAD_METHOD",
        "_NodeVisitor().visit"
    ],
    [
        "LOAD_FAST",
        "new_root"
    ],
    [
        "CALL_METHOD",
        "_NodeVisitor().visit(new_root)"
    ],
    [
        "LOAD_GLOBAL",
        "compile"
    ],
    [
        "LOAD_FAST",
        "new_root"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_FAST",
        "flags"
    ],
    [
        "CALL_FUNCTION_KW",
        "compile(new_root, filename, \"exec\", dont_inherit=True, flags=flags)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.code"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.tracer"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.source"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.filename"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.nodes"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.walk"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.root"
    ],
    [
        "CALL_METHOD",
        "ast.walk(self.root)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.iter_child_nodes"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "ast.iter_child_nodes(node)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "child"
    ],
    [
        "STORE_ATTR",
        "child.parent"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.nodes"
    ],
    [
        "CALL_FUNCTION",
        "len(self.nodes)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "STORE_ATTR",
        "node._tree_index"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.nodes"
    ],
    [
        "LOAD_METHOD",
        "self.nodes.append"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self.nodes.append(node)"
    ],
    [
        "LOAD_GLOBAL",
        "enumerate"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.root"
    ],
    [
        "LOAD_ATTR",
        "self.root.body"
    ],
    [
        "CALL_FUNCTION",
        "enumerate(self.root.body)"
    ],
    [
        "LOAD_GLOBAL",
        "is_future_import"
    ],
    [
        "LOAD_FAST",
        "stmt"
    ],
    [
        "CALL_FUNCTION",
        "is_future_import(stmt)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.root"
    ],
    [
        "LOAD_ATTR",
        "self.root.body"
    ],
    [
        "LOAD_FAST",
        "i"
    ],
    [
        "BINARY_ADD",
        "i + 1"
    ],
    [
        "BINARY_SUBSCR",
        "self.root.body[:i + 1]"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.walk"
    ],
    [
        "LOAD_FAST",
        "s"
    ],
    [
        "CALL_METHOD",
        "ast.walk(s)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "STORE_ATTR",
        "node._visit_ignore"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.nodes"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Module"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.FunctionDef"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, (ast.Module, ast.FunctionDef))"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.body"
    ],
    [
        "LOAD_GLOBAL",
        "is_future_import"
    ],
    [
        "LOAD_FAST",
        "stmt"
    ],
    [
        "CALL_FUNCTION",
        "is_future_import(stmt)"
    ],
    [
        "LOAD_FAST",
        "stmt"
    ],
    [
        "STORE_ATTR",
        "stmt._enter_call_node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.statement_stack"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.expression_stack"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.expression_values"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.return_node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.exc_value"
    ],
    [
        "LOAD_NAME",
        "lru_cache"
    ],
    [
        "CALL_FUNCTION",
        "lru_cache()"
    ],
    [
        "CALL_FUNCTION",
        "lru_cache()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.stack"
    ],
    [
        "LOAD_GLOBAL",
        "defaultdict"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "CALL_FUNCTION",
        "defaultdict(list)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.main_to_secondary_frames"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.secondary_to_main_frames"
    ],
    [
        "LOAD_GLOBAL",
        "TracedFile"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_FAST",
        "flags"
    ],
    [
        "CALL_FUNCTION",
        "TracedFile(self, source, filename, flags)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._treetrace_hidden_with_stmt"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._treetrace_hidden_before_expr"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self._treetrace_hidden_after_expr"
    ],
    [
        "LOAD_GLOBAL",
        "partial"
    ],
    [
        "LOAD_FAST",
        "f"
    ],
    [
        "LOAD_DEREF",
        "traced_file"
    ],
    [
        "CALL_FUNCTION",
        "partial(f, traced_file)"
    ],
    [
        "LOAD_FAST",
        "f"
    ],
    [
        "LOAD_ATTR",
        "f.__name__"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_GLOBAL",
        "FunctionType"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(func, FunctionType)"
    ],
    [
        "LOAD_GLOBAL",
        "ValueError"
    ],
    [
        "CALL_FUNCTION",
        "ValueError('You can only trace user-defined functions. '\n                             'The birdseye decorator must be applied first, '\n                             'at the bottom of the list.')"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_METHOD",
        "inspect.iscoroutinefunction"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_METHOD",
        "inspect.iscoroutinefunction(func)"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_METHOD",
        "inspect.isasyncgenfunction"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_METHOD",
        "inspect.isasyncgenfunction(func)"
    ],
    [
        "LOAD_GLOBAL",
        "ValueError"
    ],
    [
        "CALL_FUNCTION",
        "ValueError('You cannot trace async functions')"
    ],
    [
        "LOAD_GLOBAL",
        "AttributeError"
    ],
    [
        "LOAD_GLOBAL",
        "is_lambda"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_FUNCTION",
        "is_lambda(func)"
    ],
    [
        "LOAD_GLOBAL",
        "ValueError"
    ],
    [
        "CALL_FUNCTION",
        "ValueError('You cannot trace lambdas')"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_METHOD",
        "inspect.getsourcefile"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_METHOD",
        "inspect.getsourcefile(func)"
    ],
    [
        "LOAD_GLOBAL",
        "is_ipython_cell"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "CALL_FUNCTION",
        "is_ipython_cell(filename)"
    ],
    [
        "LOAD_FAST",
        "get_ipython"
    ],
    [
        "CALL_FUNCTION",
        "get_ipython()"
    ],
    [
        "LOAD_ATTR",
        "get_ipython().compile"
    ],
    [
        "LOAD_ATTR",
        "get_ipython().compile.flags"
    ],
    [
        "LOAD_METHOD",
        "''.join"
    ],
    [
        "LOAD_FAST",
        "linecache"
    ],
    [
        "LOAD_ATTR",
        "linecache.cache"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "BINARY_SUBSCR",
        "linecache.cache[filename]"
    ],
    [
        "BINARY_SUBSCR",
        "linecache.cache[filename][2]"
    ],
    [
        "CALL_METHOD",
        "''.join(linecache.cache[filename][2])"
    ],
    [
        "LOAD_GLOBAL",
        "read_source_file"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "CALL_FUNCTION",
        "read_source_file(filename)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.compile"
    ],
    [
        "LOAD_FAST",
        "source"
    ],
    [
        "LOAD_FAST",
        "filename"
    ],
    [
        "LOAD_FAST",
        "flags"
    ],
    [
        "CALL_METHOD",
        "self.compile(source, filename, flags)"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__dict__"
    ],
    [
        "LOAD_GLOBAL",
        "ValueError"
    ],
    [
        "CALL_FUNCTION",
        "ValueError('The birdseye decorator must be applied first, '\n                             'at the bottom of the list.')"
    ],
    [
        "LOAD_DEREF",
        "find_code"
    ],
    [
        "LOAD_FAST",
        "traced_file"
    ],
    [
        "LOAD_ATTR",
        "traced_file.code"
    ],
    [
        "CALL_FUNCTION",
        "find_code(traced_file.code)"
    ],
    [
        "LOAD_GLOBAL",
        "len"
    ],
    [
        "LOAD_DEREF",
        "code_options"
    ],
    [
        "CALL_FUNCTION",
        "len(code_options)"
    ],
    [
        "COMPARE_OP",
        "len(code_options) > 1"
    ],
    [
        "LOAD_GLOBAL",
        "is_lambda"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_FUNCTION",
        "is_lambda(func)"
    ],
    [
        "LOAD_GLOBAL",
        "ValueError"
    ],
    [
        "CALL_FUNCTION",
        "ValueError(\"Failed to trace lambda. Convert the function to a def.\")"
    ],
    [
        "LOAD_DEREF",
        "code_options"
    ],
    [
        "BINARY_SUBSCR",
        "code_options[0]"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__globals__"
    ],
    [
        "LOAD_METHOD",
        "func.__globals__.update"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._trace_methods_dict"
    ],
    [
        "LOAD_FAST",
        "traced_file"
    ],
    [
        "CALL_METHOD",
        "self._trace_methods_dict(traced_file)"
    ],
    [
        "CALL_METHOD",
        "func.__globals__.update(self._trace_methods_dict(traced_file))"
    ],
    [
        "LOAD_GLOBAL",
        "FunctionType"
    ],
    [
        "LOAD_FAST",
        "new_func_code"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__globals__"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__name__"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__defaults__"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__closure__"
    ],
    [
        "CALL_FUNCTION",
        "FunctionType(new_func_code, func.__globals__, func.__name__, func.__defaults__, func.__closure__)"
    ],
    [
        "LOAD_GLOBAL",
        "update_wrapper"
    ],
    [
        "LOAD_FAST",
        "new_func"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_FUNCTION",
        "update_wrapper(new_func, func)"
    ],
    [
        "LOAD_GLOBAL",
        "PY3"
    ],
    [
        "LOAD_GLOBAL",
        "getattr"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "CALL_FUNCTION",
        "getattr(func, '__kwdefaults__', None)"
    ],
    [
        "LOAD_FAST",
        "new_func"
    ],
    [
        "STORE_ATTR",
        "new_func.__kwdefaults__"
    ],
    [
        "LOAD_FAST",
        "traced_file"
    ],
    [
        "LOAD_FAST",
        "new_func"
    ],
    [
        "STORE_ATTR",
        "new_func.traced_file"
    ],
    [
        "LOAD_FAST",
        "new_func"
    ],
    [
        "LOAD_FAST",
        "root_code"
    ],
    [
        "LOAD_ATTR",
        "root_code.co_consts"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_METHOD",
        "inspect.iscode"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_METHOD",
        "inspect.iscode(const)"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "LOAD_ATTR",
        "const.co_firstlineno"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__code__"
    ],
    [
        "LOAD_ATTR",
        "func.__code__.co_firstlineno"
    ],
    [
        "COMPARE_OP",
        "const.co_firstlineno == func.__code__.co_firstlineno"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "LOAD_ATTR",
        "const.co_name"
    ],
    [
        "LOAD_DEREF",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__code__"
    ],
    [
        "LOAD_ATTR",
        "func.__code__.co_name"
    ],
    [
        "COMPARE_OP",
        "const.co_name == func.__code__.co_name"
    ],
    [
        "LOAD_FAST",
        "matches"
    ],
    [
        "LOAD_DEREF",
        "code_options"
    ],
    [
        "LOAD_METHOD",
        "code_options.append"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_METHOD",
        "code_options.append(const)"
    ],
    [
        "LOAD_DEREF",
        "find_code"
    ],
    [
        "LOAD_FAST",
        "const"
    ],
    [
        "CALL_FUNCTION",
        "find_code(const)"
    ],
    [
        "LOAD_GLOBAL",
        "inspect"
    ],
    [
        "LOAD_METHOD",
        "inspect.isclass"
    ],
    [
        "LOAD_FAST",
        "func"
    ],
    [
        "CALL_METHOD",
        "inspect.isclass(func)"
    ],
    [
        "LOAD_GLOBAL",
        "TypeError"
    ],
    [
        "CALL_FUNCTION",
        "TypeError('Decorating classes is no longer supported')"
    ],
    [
        "LOAD_FAST",
        "func"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.trace_function"
    ],
    [
        "LOAD_FAST",
        "func"
    ],
    [
        "CALL_METHOD",
        "self.trace_function(func)"
    ],
    [
        "LOAD_FAST",
        "optional"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.trace_function"
    ],
    [
        "LOAD_FAST",
        "decorator"
    ],
    [
        "LOAD_DEREF",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.trace_function"
    ],
    [
        "LOAD_DEREF",
        "actual_func"
    ],
    [
        "CALL_METHOD",
        "self.trace_function(actual_func)"
    ],
    [
        "LOAD_GLOBAL",
        "wraps"
    ],
    [
        "LOAD_DEREF",
        "actual_func"
    ],
    [
        "CALL_FUNCTION",
        "wraps(actual_func)"
    ],
    [
        "CALL_FUNCTION",
        "wraps(actual_func)"
    ],
    [
        "LOAD_FAST",
        "wrapper"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "LOAD_METHOD",
        "kwargs.pop"
    ],
    [
        "CALL_METHOD",
        "kwargs.pop('trace_call', False)"
    ],
    [
        "LOAD_FAST",
        "trace_call"
    ],
    [
        "LOAD_DEREF",
        "traced"
    ],
    [
        "LOAD_DEREF",
        "actual_func"
    ],
    [
        "LOAD_FAST",
        "f"
    ],
    [
        "LOAD_FAST",
        "args"
    ],
    [
        "LOAD_FAST",
        "kwargs"
    ],
    [
        "CALL_FUNCTION_EX",
        "f(*args, **kwargs)"
    ],
    [
        "LOAD_GLOBAL",
        "sys"
    ],
    [
        "LOAD_METHOD",
        "sys._getframe"
    ],
    [
        "CALL_METHOD",
        "sys._getframe(2)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.secondary_to_main_frames"
    ],
    [
        "LOAD_METHOD",
        "self.secondary_to_main_frames.get"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "self.secondary_to_main_frames.get(frame)"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_name"
    ],
    [
        "COMPARE_OP",
        "frame.f_code.co_name in ('<listcomp>', '<dictcomp>', '<setcomp>')"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_back"
    ],
    [
        "LOAD_GLOBAL",
        "ancestors"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "ancestors(node)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.FunctionDef"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Lambda"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, (ast.FunctionDef, ast.Lambda))"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.ClassDef"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, ast.ClassDef)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_back"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code"
    ],
    [
        "LOAD_ATTR",
        "frame.f_code.co_name"
    ],
    [
        "COMPARE_OP",
        "frame.f_code.co_name in ('<lambda>', '<genexpr>')"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.secondary_to_main_frames"
    ],
    [
        "LOAD_FAST",
        "original_frame"
    ],
    [
        "STORE_SUBSCR",
        "self.secondary_to_main_frames[original_frame]"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.main_to_secondary_frames"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "BINARY_SUBSCR",
        "self.main_to_secondary_frames[frame]"
    ],
    [
        "LOAD_METHOD",
        "self.main_to_secondary_frames[frame].append"
    ],
    [
        "LOAD_FAST",
        "original_frame"
    ],
    [
        "CALL_METHOD",
        "self.main_to_secondary_frames[frame].append(original_frame)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "traced_file"
    ],
    [
        "LOAD_ATTR",
        "traced_file.nodes"
    ],
    [
        "LOAD_FAST",
        "_tree_index"
    ],
    [
        "BINARY_SUBSCR",
        "traced_file.nodes[_tree_index]"
    ],
    [
        "LOAD_GLOBAL",
        "cast"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.stmt"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "cast(ast.stmt, node)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._main_frame"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self._main_frame(node)"
    ],
    [
        "LOAD_GLOBAL",
        "_StmtContext"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_FUNCTION",
        "_StmtContext(self, node, frame)"
    ],
    [
        "LOAD_FAST",
        "traced_file"
    ],
    [
        "LOAD_ATTR",
        "traced_file.nodes"
    ],
    [
        "LOAD_FAST",
        "_tree_index"
    ],
    [
        "BINARY_SUBSCR",
        "traced_file.nodes[_tree_index]"
    ],
    [
        "LOAD_GLOBAL",
        "cast"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.expr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "cast(ast.expr, node)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._main_frame"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self._main_frame(node)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "COMPARE_OP",
        "frame is None"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "BINARY_SUBSCR",
        "self.stack[frame]"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.expression_stack"
    ],
    [
        "LOAD_METHOD",
        "frame_info.expression_stack.append"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "frame_info.expression_stack.append(node)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.before_expr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "self.before_expr(node, frame)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._main_frame"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self._main_frame(node)"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "COMPARE_OP",
        "frame is None"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._after_expr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "CALL_METHOD",
        "self._after_expr(node, frame, value, None, None)"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "COMPARE_OP",
        "result is not None"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_GLOBAL",
        "ChangeValue"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(result, ChangeValue)"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_ATTR",
        "result.value"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "BINARY_SUBSCR",
        "self.stack[frame]"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.expression_stack"
    ],
    [
        "LOAD_METHOD",
        "frame_info.expression_stack.pop"
    ],
    [
        "CALL_METHOD",
        "frame_info.expression_stack.pop()"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.expression_values"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "STORE_SUBSCR",
        "frame_info.expression_values[node]"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.after_expr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "value"
    ],
    [
        "LOAD_FAST",
        "exc_value"
    ],
    [
        "LOAD_FAST",
        "exc_tb"
    ],
    [
        "CALL_METHOD",
        "self.after_expr(node, frame, value, exc_value, exc_tb)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._get_caller_stuff"
    ],
    [
        "LOAD_FAST",
        "current_frame"
    ],
    [
        "CALL_METHOD",
        "self._get_caller_stuff(current_frame)"
    ],
    [
        "LOAD_GLOBAL",
        "FrameInfo"
    ],
    [
        "CALL_FUNCTION",
        "FrameInfo()"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_FAST",
        "current_frame"
    ],
    [
        "STORE_SUBSCR",
        "self.stack[current_frame]"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.enter_call"
    ],
    [
        "LOAD_GLOBAL",
        "EnterCallInfo"
    ],
    [
        "LOAD_FAST",
        "call_node"
    ],
    [
        "LOAD_FAST",
        "enter_node"
    ],
    [
        "LOAD_FAST",
        "caller_frame"
    ],
    [
        "LOAD_FAST",
        "current_frame"
    ],
    [
        "CALL_FUNCTION",
        "EnterCallInfo(call_node, enter_node, caller_frame, current_frame)"
    ],
    [
        "CALL_METHOD",
        "self.enter_call(EnterCallInfo(call_node, enter_node, caller_frame, current_frame))"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_ATTR",
        "frame.f_back"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.secondary_to_main_frames"
    ],
    [
        "LOAD_METHOD",
        "self.secondary_to_main_frames.get"
    ],
    [
        "LOAD_FAST",
        "caller_frame"
    ],
    [
        "CALL_METHOD",
        "self.secondary_to_main_frames.get(caller_frame)"
    ],
    [
        "LOAD_FAST",
        "main_frame"
    ],
    [
        "LOAD_FAST",
        "main_frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.stack"
    ],
    [
        "LOAD_FAST",
        "caller_frame"
    ],
    [
        "BINARY_SUBSCR",
        "self.stack[caller_frame]"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.expression_stack"
    ],
    [
        "LOAD_FAST",
        "expression_stack"
    ],
    [
        "LOAD_FAST",
        "expression_stack"
    ],
    [
        "BINARY_SUBSCR",
        "expression_stack[-1]"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.statement_stack"
    ],
    [
        "BINARY_SUBSCR",
        "frame_info.statement_stack[-1]"
    ],
    [
        "LOAD_FAST",
        "caller_frame"
    ],
    [
        "LOAD_FAST",
        "call_node"
    ],
    [
        "LOAD_NAME",
        "staticmethod"
    ],
    [
        "CALL_FUNCTION",
        "staticmethod"
    ],
    [
        "LOAD_GLOBAL",
        "getattr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "getattr(node, '_visit_ignore', False)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.expr"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, ast.expr)"
    ],
    [
        "LOAD_GLOBAL",
        "hasattr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "hasattr(node, \"ctx\")"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.ctx"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Load"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node.ctx, ast.Load)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "getattr"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "CALL_FUNCTION",
        "getattr(ast, 'Starred', ())"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, getattr(ast, 'Starred', ()))"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.visit_expr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self.visit_expr(node)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.stmt"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, ast.stmt)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self.visit_stmt"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "self.visit_stmt(node)"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "_NodeVisitor"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "CALL_FUNCTION",
        "super(_NodeVisitor, self)"
    ],
    [
        "LOAD_METHOD",
        "super(_NodeVisitor, self).generic_visit"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "super(_NodeVisitor, self).generic_visit(node)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._create_simple_marker_call"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "TreeTracerBase"
    ],
    [
        "LOAD_ATTR",
        "TreeTracerBase._treetrace_hidden_before_expr"
    ],
    [
        "CALL_METHOD",
        "self._create_simple_marker_call(node, TreeTracerBase._treetrace_hidden_before_expr)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.copy_location"
    ],
    [
        "LOAD_FAST",
        "before_marker"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "ast.copy_location(before_marker, node)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Call"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Name"
    ],
    [
        "LOAD_GLOBAL",
        "TreeTracerBase"
    ],
    [
        "LOAD_ATTR",
        "TreeTracerBase._treetrace_hidden_after_expr"
    ],
    [
        "LOAD_ATTR",
        "TreeTracerBase._treetrace_hidden_after_expr.__name__"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.Load"
    ],
    [
        "CALL_METHOD",
        "ast.Load()"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.Name(id=TreeTracerBase._treetrace_hidden_after_expr.__name__,\n                          ctx=ast.Load())"
    ],
    [
        "LOAD_FAST",
        "before_marker"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "_NodeVisitor"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "CALL_FUNCTION",
        "super(_NodeVisitor, self)"
    ],
    [
        "LOAD_METHOD",
        "super(_NodeVisitor, self).generic_visit"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "super(_NodeVisitor, self).generic_visit(node)"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.Call(\n            func=ast.Name(id=TreeTracerBase._treetrace_hidden_after_expr.__name__,\n                          ctx=ast.Load()),\n            args=[\n                before_marker,\n                super(_NodeVisitor, self).generic_visit(node),\n            ],\n            keywords=[],\n        )"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.copy_location"
    ],
    [
        "LOAD_FAST",
        "after_marker"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "ast.copy_location(after_marker, node)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.fix_missing_locations"
    ],
    [
        "LOAD_FAST",
        "after_marker"
    ],
    [
        "CALL_METHOD",
        "ast.fix_missing_locations(after_marker)"
    ],
    [
        "LOAD_FAST",
        "after_marker"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_METHOD",
        "self._create_simple_marker_call"
    ],
    [
        "LOAD_GLOBAL",
        "super"
    ],
    [
        "LOAD_GLOBAL",
        "_NodeVisitor"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "CALL_FUNCTION",
        "super(_NodeVisitor, self)"
    ],
    [
        "LOAD_METHOD",
        "super(_NodeVisitor, self).generic_visit"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "super(_NodeVisitor, self).generic_visit(node)"
    ],
    [
        "LOAD_GLOBAL",
        "TreeTracerBase"
    ],
    [
        "LOAD_ATTR",
        "TreeTracerBase._treetrace_hidden_with_stmt"
    ],
    [
        "CALL_METHOD",
        "self._create_simple_marker_call(\n            super(_NodeVisitor, self).generic_visit(node),\n            TreeTracerBase._treetrace_hidden_with_stmt)"
    ],
    [
        "LOAD_GLOBAL",
        "PY3"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.With"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.withitem"
    ],
    [
        "LOAD_FAST",
        "context_expr"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.withitem(context_expr=context_expr)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.With(\n                items=[ast.withitem(context_expr=context_expr)],\n                body=[node],\n            )"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.With"
    ],
    [
        "LOAD_FAST",
        "context_expr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.With(\n                context_expr=context_expr,\n                body=[node],\n            )"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.copy_location"
    ],
    [
        "LOAD_FAST",
        "wrapped"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "ast.copy_location(wrapped, node)"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.fix_missing_locations"
    ],
    [
        "LOAD_FAST",
        "wrapped"
    ],
    [
        "CALL_METHOD",
        "ast.fix_missing_locations(wrapped)"
    ],
    [
        "LOAD_FAST",
        "wrapped"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Call"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Name"
    ],
    [
        "LOAD_FAST",
        "func"
    ],
    [
        "LOAD_ATTR",
        "func.__name__"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.Load"
    ],
    [
        "CALL_METHOD",
        "ast.Load()"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.Name(id=func.__name__,\n                          ctx=ast.Load())"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_METHOD",
        "ast.Num"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node._tree_index"
    ],
    [
        "CALL_METHOD",
        "ast.Num(node._tree_index)"
    ],
    [
        "CALL_FUNCTION_KW",
        "ast.Call(\n            func=ast.Name(id=func.__name__,\n                          ctx=ast.Load()),\n            args=[ast.Num(node._tree_index)],\n            keywords=[],\n        )"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.tracer"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "STORE_ATTR",
        "self.frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tracer"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_GLOBAL",
        "getattr"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_FUNCTION",
        "getattr(node, '_enter_call_node', False)"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer._enter_call"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "tracer._enter_call(node, frame)"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_ATTR",
        "tracer.stack"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "BINARY_SUBSCR",
        "tracer.stack[frame]"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "STORE_ATTR",
        "frame_info.expression_stack"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.statement_stack"
    ],
    [
        "LOAD_METHOD",
        "frame_info.statement_stack.append"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "CALL_METHOD",
        "frame_info.statement_stack.append(node)"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer.before_stmt"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "tracer.before_stmt(node, frame)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.node"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tracer"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.frame"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_ATTR",
        "tracer.stack"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "BINARY_SUBSCR",
        "tracer.stack[frame]"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.statement_stack"
    ],
    [
        "LOAD_METHOD",
        "frame_info.statement_stack.pop"
    ],
    [
        "CALL_METHOD",
        "frame_info.statement_stack.pop()"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.exc_value"
    ],
    [
        "COMPARE_OP",
        "exc_val is not frame_info.exc_value"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "STORE_ATTR",
        "frame_info.exc_value"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.expression_stack"
    ],
    [
        "LOAD_FAST",
        "expression_stack"
    ],
    [
        "LOAD_FAST",
        "expression_stack"
    ],
    [
        "BINARY_SUBSCR",
        "expression_stack[-1]"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer._after_expr"
    ],
    [
        "LOAD_FAST",
        "exc_node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "exc_tb"
    ],
    [
        "CALL_METHOD",
        "tracer._after_expr(exc_node, frame, None, exc_val, exc_tb)"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer.after_stmt"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "exc_tb"
    ],
    [
        "LOAD_FAST",
        "exc_node"
    ],
    [
        "CALL_METHOD",
        "tracer.after_stmt(node, frame, exc_val, exc_tb, exc_node)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Return"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(node, ast.Return)"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "STORE_ATTR",
        "frame_info.return_node"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.parent"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.return_node"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.FunctionDef"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.Module"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(parent, (ast.FunctionDef, ast.Module))"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_ATTR",
        "parent.body"
    ],
    [
        "BINARY_SUBSCR",
        "parent.body[-1]"
    ],
    [
        "COMPARE_OP",
        "node is parent.body[-1]"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "return_node"
    ],
    [
        "LOAD_FAST",
        "exiting"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer._get_caller_stuff"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "tracer._get_caller_stuff(frame)"
    ],
    [
        "LOAD_FAST",
        "return_node"
    ],
    [
        "LOAD_FAST",
        "return_node"
    ],
    [
        "LOAD_ATTR",
        "return_node.value"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "frame_info"
    ],
    [
        "LOAD_ATTR",
        "frame_info.expression_values"
    ],
    [
        "LOAD_FAST",
        "return_node"
    ],
    [
        "LOAD_ATTR",
        "return_node.value"
    ],
    [
        "BINARY_SUBSCR",
        "frame_info.expression_values[return_node.value]"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_METHOD",
        "tracer.exit_call"
    ],
    [
        "LOAD_GLOBAL",
        "ExitCallInfo"
    ],
    [
        "LOAD_FAST",
        "call_node"
    ],
    [
        "LOAD_FAST",
        "return_node"
    ],
    [
        "LOAD_FAST",
        "caller_frame"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "return_value"
    ],
    [
        "LOAD_FAST",
        "exc_val"
    ],
    [
        "LOAD_FAST",
        "exc_tb"
    ],
    [
        "CALL_FUNCTION",
        "ExitCallInfo(call_node,\n                                          return_node,\n                                          caller_frame,\n                                          frame,\n                                          return_value,\n                                          exc_val,\n                                          exc_tb\n                                          )"
    ],
    [
        "CALL_METHOD",
        "tracer.exit_call(ExitCallInfo(call_node,\n                                          return_node,\n                                          caller_frame,\n                                          frame,\n                                          return_value,\n                                          exc_val,\n                                          exc_tb\n                                          ))"
    ],
    [
        "LOAD_FAST",
        "tracer"
    ],
    [
        "LOAD_ATTR",
        "tracer.stack"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tracer"
    ],
    [
        "LOAD_ATTR",
        "self.tracer.main_to_secondary_frames"
    ],
    [
        "LOAD_METHOD",
        "self.tracer.main_to_secondary_frames.pop"
    ],
    [
        "LOAD_FAST",
        "frame"
    ],
    [
        "CALL_METHOD",
        "self.tracer.main_to_secondary_frames.pop(frame)"
    ],
    [
        "LOAD_FAST",
        "self"
    ],
    [
        "LOAD_ATTR",
        "self.tracer"
    ],
    [
        "LOAD_ATTR",
        "self.tracer.secondary_to_main_frames"
    ],
    [
        "LOAD_FAST",
        "secondary_frame"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.parent"
    ],
    [
        "LOAD_GLOBAL",
        "AttributeError"
    ],
    [
        "LOAD_FAST",
        "node"
    ],
    [
        "LOAD_DEREF",
        "node"
    ],
    [
        "LOAD_ATTR",
        "node.parent"
    ],
    [
        "LOAD_GLOBAL",
        "AttributeError"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.FunctionDef"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(parent, ast.FunctionDef)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.For"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(parent, ast.For)"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_ATTR",
        "parent.iter"
    ],
    [
        "LOAD_DEREF",
        "node"
    ],
    [
        "COMPARE_OP",
        "parent.iter is not node"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.While"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(parent, ast.While)"
    ],
    [
        "LOAD_DEREF",
        "node"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_ATTR",
        "parent.orelse"
    ],
    [
        "COMPARE_OP",
        "node not in parent.orelse"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.comprehension"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(parent, ast.comprehension)"
    ],
    [
        "LOAD_DEREF",
        "node"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_ATTR",
        "parent.ifs"
    ],
    [
        "COMPARE_OP",
        "node in parent.ifs"
    ],
    [
        "LOAD_FAST",
        "is_containing_loop"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_METHOD",
        "result.append"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "CALL_METHOD",
        "result.append(parent)"
    ],
    [
        "LOAD_GLOBAL",
        "isinstance"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.ListComp"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.GeneratorExp"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.DictComp"
    ],
    [
        "LOAD_GLOBAL",
        "ast"
    ],
    [
        "LOAD_ATTR",
        "ast.SetComp"
    ],
    [
        "CALL_FUNCTION",
        "isinstance(parent, (ast.ListComp,\n                                 ast.GeneratorExp,\n                                 ast.DictComp,\n                                 ast.SetComp))"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_ATTR",
        "parent.generators"
    ],
    [
        "LOAD_DEREF",
        "node"
    ],
    [
        "LOAD_FAST",
        "generators"
    ],
    [
        "COMPARE_OP",
        "node in generators"
    ],
    [
        "LOAD_GLOBAL",
        "list"
    ],
    [
        "LOAD_GLOBAL",
        "takewhile"
    ],
    [
        "LOAD_FAST",
        "generators"
    ],
    [
        "CALL_FUNCTION",
        "takewhile(lambda n: n != node, generators)"
    ],
    [
        "CALL_FUNCTION",
        "list(takewhile(lambda n: n != node, generators))"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_METHOD",
        "result.extend"
    ],
    [
        "LOAD_GLOBAL",
        "reversed"
    ],
    [
        "LOAD_FAST",
        "generators"
    ],
    [
        "CALL_FUNCTION",
        "reversed(generators)"
    ],
    [
        "CALL_METHOD",
        "result.extend(reversed(generators))"
    ],
    [
        "LOAD_FAST",
        "parent"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "LOAD_METHOD",
        "result.reverse"
    ],
    [
        "CALL_METHOD",
        "result.reverse()"
    ],
    [
        "LOAD_GLOBAL",
        "tuple"
    ],
    [
        "LOAD_FAST",
        "result"
    ],
    [
        "CALL_FUNCTION",
        "tuple(result)"
    ],
    [
        "LOAD_FAST",
        "n"
    ],
    [
        "LOAD_DEREF",
        "node"
    ],
    [
        "COMPARE_OP",
        "n != node"
    ]
]