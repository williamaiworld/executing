[
    [
        "LOAD_NAME", 
        "standard_library"
    ], 
    [
        "LOAD_ATTR", 
        "standard_library.install_aliases"
    ], 
    [
        "CALL_FUNCTION", 
        "standard_library.install_aliases()"
    ], 
    [
        "LOAD_NAME", 
        "RESERVED_WORDS"
    ], 
    [
        "LOAD_ATTR", 
        "RESERVED_WORDS.add"
    ], 
    [
        "CALL_FUNCTION", 
        "RESERVED_WORDS.add('function')"
    ], 
    [
        "LOAD_NAME", 
        "object"
    ], 
    [
        "LOAD_NAME", 
        "retry"
    ], 
    [
        "LOAD_NAME", 
        "InterfaceError"
    ], 
    [
        "LOAD_NAME", 
        "OperationalError"
    ], 
    [
        "LOAD_NAME", 
        "InternalError"
    ], 
    [
        "LOAD_NAME", 
        "ProgrammingError"
    ], 
    [
        "CALL_FUNCTION", 
        "retry(3, (InterfaceError, OperationalError, InternalError, ProgrammingError))"
    ], 
    [
        "LOAD_NAME", 
        "False"
    ], 
    [
        "LOAD_NAME", 
        "contextmanager"
    ], 
    [
        "CALL_FUNCTION", 
        "contextmanager"
    ], 
    [
        "LOAD_FAST", 
        "db_uri"
    ], 
    [
        "LOAD_GLOBAL", 
        "os"
    ], 
    [
        "LOAD_ATTR", 
        "os.environ"
    ], 
    [
        "LOAD_ATTR", 
        "os.environ.get"
    ], 
    [
        "CALL_FUNCTION", 
        "os.environ.get('BIRDSEYE_DB')"
    ], 
    [
        "LOAD_GLOBAL", 
        "os"
    ], 
    [
        "LOAD_ATTR", 
        "os.path"
    ], 
    [
        "LOAD_ATTR", 
        "os.path.join"
    ], 
    [
        "LOAD_GLOBAL", 
        "os"
    ], 
    [
        "LOAD_ATTR", 
        "os.path"
    ], 
    [
        "LOAD_ATTR", 
        "os.path.expanduser"
    ], 
    [
        "CALL_FUNCTION", 
        "os.path.expanduser('~')"
    ], 
    [
        "CALL_FUNCTION", 
        "os.path.join(os.path.expanduser('~'),\n                                '.birdseye.db')"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.db_uri"
    ], 
    [
        "LOAD_GLOBAL", 
        "dict"
    ], 
    [
        "LOAD_GLOBAL", 
        "False"
    ], 
    [
        "CALL_FUNCTION", 
        "dict(\n            pool_recycle=280,\n            echo=False,  # for convenience when debugging\n        )"
    ], 
    [
        "LOAD_GLOBAL", 
        "create_engine"
    ], 
    [
        "LOAD_FAST", 
        "db_uri"
    ], 
    [
        "LOAD_FAST", 
        "kwargs"
    ], 
    [
        "CALL_FUNCTION_KW", 
        "create_engine(db_uri, **kwargs)"
    ], 
    [
        "LOAD_GLOBAL", 
        "ArgumentError"
    ], 
    [
        "LOAD_FAST", 
        "db_uri"
    ], 
    [
        "BINARY_ADD", 
        "'sqlite:///' + db_uri"
    ], 
    [
        "LOAD_GLOBAL", 
        "create_engine"
    ], 
    [
        "LOAD_FAST", 
        "db_uri"
    ], 
    [
        "LOAD_FAST", 
        "kwargs"
    ], 
    [
        "CALL_FUNCTION_KW", 
        "create_engine(db_uri, **kwargs)"
    ], 
    [
        "LOAD_FAST", 
        "engine"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.engine"
    ], 
    [
        "LOAD_GLOBAL", 
        "sessionmaker"
    ], 
    [
        "LOAD_FAST", 
        "engine"
    ], 
    [
        "CALL_FUNCTION", 
        "sessionmaker(bind=engine)"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.Session"
    ], 
    [
        "LOAD_GLOBAL", 
        "object"
    ], 
    [
        "LOAD_GLOBAL", 
        "declarative_base"
    ], 
    [
        "LOAD_FAST", 
        "Base"
    ], 
    [
        "CALL_FUNCTION", 
        "declarative_base(cls=Base)"
    ], 
    [
        "LOAD_FAST", 
        "Base"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_GLOBAL", 
        "object"
    ], 
    [
        "LOAD_FAST", 
        "engine"
    ], 
    [
        "LOAD_ATTR", 
        "engine.name"
    ], 
    [
        "COMPARE_OP", 
        "engine.name == 'mysql'"
    ], 
    [
        "LOAD_GLOBAL", 
        "LONGTEXT"
    ], 
    [
        "LOAD_GLOBAL", 
        "Text"
    ], 
    [
        "LOAD_FAST", 
        "Base"
    ], 
    [
        "LOAD_FAST", 
        "Base"
    ], 
    [
        "LOAD_FAST", 
        "Call"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.Call"
    ], 
    [
        "LOAD_FAST", 
        "Function"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.Function"
    ], 
    [
        "LOAD_DEREF", 
        "KeyValue"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self._KeyValue"
    ], 
    [
        "LOAD_FAST", 
        "KeyValueStore"
    ], 
    [
        "CALL_FUNCTION", 
        "KeyValueStore()"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "STORE_ATTR", 
        "self.key_value_store"
    ], 
    [
        "LOAD_FAST", 
        "_skip_version_check"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.table_exists"
    ], 
    [
        "LOAD_FAST", 
        "Function"
    ], 
    [
        "CALL_FUNCTION", 
        "self.table_exists(Function)"
    ], 
    [
        "LOAD_FAST", 
        "Base"
    ], 
    [
        "LOAD_ATTR", 
        "Base.metadata"
    ], 
    [
        "LOAD_ATTR", 
        "Base.metadata.create_all"
    ], 
    [
        "LOAD_FAST", 
        "engine"
    ], 
    [
        "CALL_FUNCTION", 
        "Base.metadata.create_all(engine)"
    ], 
    [
        "LOAD_GLOBAL", 
        "DB_VERSION"
    ], 
    [
        "LOAD_FAST", 
        "kv"
    ], 
    [
        "STORE_ATTR", 
        "kv.version"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.table_exists"
    ], 
    [
        "LOAD_DEREF", 
        "KeyValue"
    ], 
    [
        "CALL_FUNCTION", 
        "self.table_exists(KeyValue)"
    ], 
    [
        "UNARY_NOT", 
        "not self.table_exists(KeyValue)"
    ], 
    [
        "LOAD_GLOBAL", 
        "int"
    ], 
    [
        "LOAD_FAST", 
        "kv"
    ], 
    [
        "LOAD_ATTR", 
        "kv.version"
    ], 
    [
        "CALL_FUNCTION", 
        "int(kv.version)"
    ], 
    [
        "LOAD_GLOBAL", 
        "DB_VERSION"
    ], 
    [
        "COMPARE_OP", 
        "int(kv.version) < DB_VERSION"
    ], 
    [
        "LOAD_GLOBAL", 
        "sys"
    ], 
    [
        "LOAD_ATTR", 
        "sys.exit"
    ], 
    [
        "CALL_FUNCTION", 
        "sys.exit('The birdseye database schema is out of date. '\n                     'Run \"python -m birdseye.clear_db\" to delete the existing tables.')"
    ], 
    [
        "LOAD_NAME", 
        "declared_attr"
    ], 
    [
        "CALL_FUNCTION", 
        "declared_attr"
    ], 
    [
        "LOAD_FAST", 
        "cls"
    ], 
    [
        "LOAD_ATTR", 
        "cls.__name__"
    ], 
    [
        "LOAD_ATTR", 
        "cls.__name__.lower"
    ], 
    [
        "CALL_FUNCTION", 
        "cls.__name__.lower()"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "String"
    ], 
    [
        "CALL_FUNCTION", 
        "String(50)"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(String(50), primary_key=True)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "__getitem__"
    ], 
    [
        "LOAD_NAME", 
        "__setitem__"
    ], 
    [
        "LOAD_DEREF", 
        "db_self"
    ], 
    [
        "LOAD_ATTR", 
        "db_self.session_scope"
    ], 
    [
        "CALL_FUNCTION", 
        "db_self.session_scope()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session\n                            .query"
    ], 
    [
        "LOAD_DEREF", 
        "KeyValue"
    ], 
    [
        "LOAD_ATTR", 
        "KeyValue.value"
    ], 
    [
        "CALL_FUNCTION", 
        "session\n                            .query(KeyValue.value)"
    ], 
    [
        "LOAD_ATTR", 
        "session\n                            .query(KeyValue.value)\n                            .filter_by"
    ], 
    [
        "LOAD_FAST", 
        "item"
    ], 
    [
        "CALL_FUNCTION", 
        "session\n                            .query(KeyValue.value)\n                            .filter_by(key=item)"
    ], 
    [
        "LOAD_ATTR", 
        "session\n                            .query(KeyValue.value)\n                            .filter_by(key=item)\n                            .scalar"
    ], 
    [
        "CALL_FUNCTION", 
        "session\n                            .query(KeyValue.value)\n                            .filter_by(key=item)\n                            .scalar()"
    ], 
    [
        "LOAD_DEREF", 
        "db_self"
    ], 
    [
        "LOAD_ATTR", 
        "db_self.session_scope"
    ], 
    [
        "CALL_FUNCTION", 
        "db_self.session_scope()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session.query"
    ], 
    [
        "LOAD_DEREF", 
        "KeyValue"
    ], 
    [
        "CALL_FUNCTION", 
        "session.query(KeyValue)"
    ], 
    [
        "LOAD_ATTR", 
        "session.query(KeyValue).filter_by"
    ], 
    [
        "LOAD_FAST", 
        "key"
    ], 
    [
        "CALL_FUNCTION", 
        "session.query(KeyValue).filter_by(key=key)"
    ], 
    [
        "LOAD_ATTR", 
        "session.query(KeyValue).filter_by(key=key).delete"
    ], 
    [
        "CALL_FUNCTION", 
        "session.query(KeyValue).filter_by(key=key).delete()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session.add"
    ], 
    [
        "LOAD_DEREF", 
        "KeyValue"
    ], 
    [
        "LOAD_FAST", 
        "key"
    ], 
    [
        "LOAD_GLOBAL", 
        "str"
    ], 
    [
        "LOAD_FAST", 
        "value"
    ], 
    [
        "CALL_FUNCTION", 
        "str(value)"
    ], 
    [
        "CALL_FUNCTION", 
        "KeyValue(key=key, value=str(value))"
    ], 
    [
        "CALL_FUNCTION", 
        "session.add(KeyValue(key=key, value=str(value)))"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "String"
    ], 
    [
        "CALL_FUNCTION", 
        "String(length=32)"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(String(length=32), primary_key=True)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Integer"
    ], 
    [
        "LOAD_NAME", 
        "ForeignKey"
    ], 
    [
        "CALL_FUNCTION", 
        "ForeignKey('function.id')"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Integer, ForeignKey('function.id'), index=True)"
    ], 
    [
        "LOAD_NAME", 
        "relationship"
    ], 
    [
        "LOAD_NAME", 
        "backref"
    ], 
    [
        "CALL_FUNCTION", 
        "backref('calls', lazy='dynamic')"
    ], 
    [
        "CALL_FUNCTION", 
        "relationship('Function', backref=backref('calls', lazy='dynamic'))"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_DEREF", 
        "LongText"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(LongText)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "DateTime"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(DateTime, index=True)"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "staticmethod"
    ], 
    [
        "CALL_FUNCTION", 
        "staticmethod"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "staticmethod"
    ], 
    [
        "CALL_FUNCTION", 
        "staticmethod"
    ], 
    [
        "LOAD_NAME", 
        "id"
    ], 
    [
        "LOAD_NAME", 
        "function_id"
    ], 
    [
        "LOAD_NAME", 
        "return_value"
    ], 
    [
        "LOAD_NAME", 
        "traceback"
    ], 
    [
        "LOAD_NAME", 
        "exception"
    ], 
    [
        "LOAD_NAME", 
        "start_time"
    ], 
    [
        "LOAD_NAME", 
        "arguments"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self._pretty_time"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.start_time"
    ], 
    [
        "CALL_FUNCTION", 
        "self._pretty_time(self.start_time)"
    ], 
    [
        "LOAD_FAST", 
        "dt"
    ], 
    [
        "LOAD_GLOBAL", 
        "Markup"
    ], 
    [
        "LOAD_FAST", 
        "dt"
    ], 
    [
        "LOAD_ATTR", 
        "dt.strftime"
    ], 
    [
        "CALL_FUNCTION", 
        "dt.strftime('%Y-%m-%d&nbsp;%H:%M:%S')"
    ], 
    [
        "LOAD_GLOBAL", 
        "naturaltime"
    ], 
    [
        "LOAD_FAST", 
        "dt"
    ], 
    [
        "CALL_FUNCTION", 
        "naturaltime(dt)"
    ], 
    [
        "BINARY_MODULO", 
        "'%s (%s)' % (\n                    dt.strftime('%Y-%m-%d&nbsp;%H:%M:%S'),\n                    naturaltime(dt))"
    ], 
    [
        "CALL_FUNCTION", 
        "Markup('%s (%s)' % (\n                    dt.strftime('%Y-%m-%d&nbsp;%H:%M:%S'),\n                    naturaltime(dt)))"
    ], 
    [
        "LOAD_GLOBAL", 
        "Markup"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.success"
    ], 
    [
        "BINARY_MODULO", 
        "'<span class=\"glyphicon glyphicon-%s\" '\n                              'style=\"color: %s\"></span>' % (\n                                  ('ok', 'green') if self.success else\n                                  ('remove', 'red'))"
    ], 
    [
        "CALL_FUNCTION", 
        "Markup('<span class=\"glyphicon glyphicon-%s\" '\n                              'style=\"color: %s\"></span>' % (\n                                  ('ok', 'green') if self.success else\n                                  ('remove', 'red')))"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.exception"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.traceback"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.return_value"
    ], 
    [
        "COMPARE_OP", 
        "self.return_value == 'None'"
    ], 
    [
        "LOAD_GLOBAL", 
        "False"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.traceback"
    ], 
    [
        "UNARY_NOT", 
        "not self.traceback"
    ], 
    [
        "LOAD_GLOBAL", 
        "True"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.success"
    ], 
    [
        "LOAD_GLOBAL", 
        "str"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.return_value"
    ], 
    [
        "CALL_FUNCTION", 
        "str(self.return_value)"
    ], 
    [
        "LOAD_GLOBAL", 
        "str"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.exception"
    ], 
    [
        "CALL_FUNCTION", 
        "str(self.exception)"
    ], 
    [
        "LOAD_GLOBAL", 
        "json"
    ], 
    [
        "LOAD_ATTR", 
        "json.loads"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.arguments"
    ], 
    [
        "CALL_FUNCTION", 
        "json.loads(self.arguments)"
    ], 
    [
        "LOAD_GLOBAL", 
        "json"
    ], 
    [
        "LOAD_ATTR", 
        "json.loads"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.data"
    ], 
    [
        "CALL_FUNCTION", 
        "json.loads(self.data)"
    ], 
    [
        "LOAD_GLOBAL", 
        "dict"
    ], 
    [
        "LOAD_FAST", 
        "call"
    ], 
    [
        "LOAD_ATTR", 
        "call.arguments_list"
    ], 
    [
        "LOAD_GLOBAL", 
        "select_attrs"
    ], 
    [
        "LOAD_FAST", 
        "call"
    ], 
    [
        "CALL_FUNCTION", 
        "select_attrs(call, 'id function_id return_value traceback '\n                                                 'exception start_time')"
    ], 
    [
        "CALL_FUNCTION_KW", 
        "dict(arguments=call.arguments_list,\n                            **select_attrs(call, 'id function_id return_value traceback '\n                                                 'exception start_time'))"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Integer"
    ], 
    [
        "LOAD_NAME", 
        "Sequence"
    ], 
    [
        "CALL_FUNCTION", 
        "Sequence('function_id_seq')"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Integer, Sequence('function_id_seq'), primary_key=True)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Text"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Text)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_DEREF", 
        "LongText"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(LongText)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "Integer"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(Integer)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_DEREF", 
        "LongText"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(LongText)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "String"
    ], 
    [
        "CALL_FUNCTION", 
        "String(length=64)"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(String(length=64), index=True)"
    ], 
    [
        "LOAD_NAME", 
        "Column"
    ], 
    [
        "LOAD_NAME", 
        "String"
    ], 
    [
        "CALL_FUNCTION", 
        "String(length=64)"
    ], 
    [
        "LOAD_NAME", 
        "True"
    ], 
    [
        "CALL_FUNCTION", 
        "Column(String(length=64), index=True)"
    ], 
    [
        "LOAD_NAME", 
        "UniqueConstraint"
    ], 
    [
        "CALL_FUNCTION", 
        "UniqueConstraint('hash',\n                                 name='everything_unique')"
    ], 
    [
        "LOAD_NAME", 
        "Index"
    ], 
    [
        "CALL_FUNCTION", 
        "Index('idx_file', 'file', mysql_length=256)"
    ], 
    [
        "LOAD_NAME", 
        "Index"
    ], 
    [
        "CALL_FUNCTION", 
        "Index('idx_name', 'name', mysql_length=32)"
    ], 
    [
        "LOAD_NAME", 
        "property"
    ], 
    [
        "CALL_FUNCTION", 
        "property"
    ], 
    [
        "LOAD_NAME", 
        "staticmethod"
    ], 
    [
        "CALL_FUNCTION", 
        "staticmethod"
    ], 
    [
        "LOAD_NAME", 
        "file"
    ], 
    [
        "LOAD_NAME", 
        "name"
    ], 
    [
        "LOAD_NAME", 
        "lineno"
    ], 
    [
        "LOAD_NAME", 
        "hash"
    ], 
    [
        "LOAD_NAME", 
        "body_hash"
    ], 
    [
        "LOAD_NAME", 
        "type"
    ], 
    [
        "LOAD_GLOBAL", 
        "json"
    ], 
    [
        "LOAD_ATTR", 
        "json.loads"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.data"
    ], 
    [
        "CALL_FUNCTION", 
        "json.loads(self.data)"
    ], 
    [
        "LOAD_GLOBAL", 
        "select_attrs"
    ], 
    [
        "LOAD_FAST", 
        "func"
    ], 
    [
        "CALL_FUNCTION", 
        "select_attrs(func, 'file name lineno hash body_hash type')"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.engine"
    ], 
    [
        "LOAD_ATTR", 
        "self.engine.dialect"
    ], 
    [
        "LOAD_ATTR", 
        "self.engine.dialect.has_table"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.engine"
    ], 
    [
        "LOAD_FAST", 
        "table"
    ], 
    [
        "LOAD_ATTR", 
        "table.__name__"
    ], 
    [
        "CALL_FUNCTION", 
        "self.engine.dialect.has_table(self.engine, table.__name__)"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.session_scope"
    ], 
    [
        "CALL_FUNCTION", 
        "self.session_scope()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session.query"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.Function"
    ], 
    [
        "LOAD_ATTR", 
        "self.Function.file"
    ], 
    [
        "CALL_FUNCTION", 
        "session.query(self.Function.file)"
    ], 
    [
        "LOAD_ATTR", 
        "session.query(self.Function.file).distinct"
    ], 
    [
        "CALL_FUNCTION", 
        "session.query(self.Function.file).distinct()"
    ], 
    [
        "LOAD_GLOBAL", 
        "is_ipython_cell"
    ], 
    [
        "LOAD_FAST", 
        "f"
    ], 
    [
        "BINARY_SUBSCR", 
        "f[0]"
    ], 
    [
        "CALL_FUNCTION", 
        "is_ipython_cell(f[0])"
    ], 
    [
        "LOAD_FAST", 
        "f"
    ], 
    [
        "BINARY_SUBSCR", 
        "f[0]"
    ], 
    [
        "LOAD_FAST", 
        "paths"
    ], 
    [
        "LOAD_ATTR", 
        "paths.sort"
    ], 
    [
        "CALL_FUNCTION", 
        "paths.sort()"
    ], 
    [
        "LOAD_GLOBAL", 
        "IPYTHON_FILE_PATH"
    ], 
    [
        "LOAD_FAST", 
        "paths"
    ], 
    [
        "COMPARE_OP", 
        "IPYTHON_FILE_PATH in paths"
    ], 
    [
        "LOAD_FAST", 
        "paths"
    ], 
    [
        "LOAD_ATTR", 
        "paths.remove"
    ], 
    [
        "LOAD_GLOBAL", 
        "IPYTHON_FILE_PATH"
    ], 
    [
        "CALL_FUNCTION", 
        "paths.remove(IPYTHON_FILE_PATH)"
    ], 
    [
        "LOAD_FAST", 
        "paths"
    ], 
    [
        "LOAD_ATTR", 
        "paths.insert"
    ], 
    [
        "LOAD_GLOBAL", 
        "IPYTHON_FILE_PATH"
    ], 
    [
        "CALL_FUNCTION", 
        "paths.insert(0, IPYTHON_FILE_PATH)"
    ], 
    [
        "LOAD_FAST", 
        "paths"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.Call"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.Function"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self._KeyValue"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.table_exists"
    ], 
    [
        "LOAD_FAST", 
        "model"
    ], 
    [
        "CALL_FUNCTION", 
        "self.table_exists(model)"
    ], 
    [
        "LOAD_FAST", 
        "model"
    ], 
    [
        "LOAD_ATTR", 
        "model.__table__"
    ], 
    [
        "LOAD_ATTR", 
        "model.__table__.drop"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.engine"
    ], 
    [
        "CALL_FUNCTION", 
        "model.__table__.drop(self.engine)"
    ], 
    [
        "LOAD_FAST", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.Session"
    ], 
    [
        "CALL_FUNCTION", 
        "self.Session()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session.commit"
    ], 
    [
        "CALL_FUNCTION", 
        "session.commit()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session.rollback"
    ], 
    [
        "CALL_FUNCTION", 
        "session.rollback()"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_ATTR", 
        "session.close"
    ], 
    [
        "CALL_FUNCTION", 
        "session.close()"
    ], 
    [
        "LOAD_GLOBAL", 
        "functools"
    ], 
    [
        "LOAD_ATTR", 
        "functools.wraps"
    ], 
    [
        "LOAD_DEREF", 
        "func"
    ], 
    [
        "CALL_FUNCTION", 
        "functools.wraps(func)"
    ], 
    [
        "CALL_FUNCTION", 
        "functools.wraps(func)"
    ], 
    [
        "LOAD_GLOBAL", 
        "retry_db"
    ], 
    [
        "LOAD_FAST", 
        "wrapper"
    ], 
    [
        "CALL_FUNCTION", 
        "retry_db(wrapper)"
    ], 
    [
        "LOAD_DEREF", 
        "self"
    ], 
    [
        "LOAD_ATTR", 
        "self.session_scope"
    ], 
    [
        "CALL_FUNCTION", 
        "self.session_scope()"
    ], 
    [
        "LOAD_DEREF", 
        "func"
    ], 
    [
        "LOAD_FAST", 
        "session"
    ], 
    [
        "LOAD_FAST", 
        "args"
    ], 
    [
        "LOAD_FAST", 
        "kwargs"
    ], 
    [
        "CALL_FUNCTION_VAR_KW", 
        "func(session, *args, **kwargs)"
    ]
]